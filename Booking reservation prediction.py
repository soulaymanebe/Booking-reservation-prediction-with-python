{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# DATA MINING"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### BELHAJ SOULAYMANE - ESSALIHI MOUAD"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### DATA ine2"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 101,
   "metadata": {
    "id": "IIQUsrD7EGBM"
   },
   "outputs": [],
   "source": [
    "import warnings\n",
    "warnings.filterwarnings(\"ignore\")\n",
    "\n",
    "import pandas as pd\n",
    "import matplotlib.pyplot as plt\n",
    "import numpy as np\n",
    "import seaborn as sns \n",
    "import missingno as msno"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "qRY0Lf31EGBU"
   },
   "source": [
    "# I. Dataset"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 102,
   "metadata": {
    "id": "1HfHAL_NEGBY",
    "outputId": "4e290bbd-63e3-4f3b-9b14-ba6e72e39ead"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>hotel</th>\n",
       "      <th>is_canceled</th>\n",
       "      <th>lead_time</th>\n",
       "      <th>arrival_date_year</th>\n",
       "      <th>arrival_date_month</th>\n",
       "      <th>arrival_date_week_number</th>\n",
       "      <th>arrival_date_day_of_month</th>\n",
       "      <th>stays_in_weekend_nights</th>\n",
       "      <th>stays_in_week_nights</th>\n",
       "      <th>adults</th>\n",
       "      <th>...</th>\n",
       "      <th>deposit_type</th>\n",
       "      <th>agent</th>\n",
       "      <th>company</th>\n",
       "      <th>days_in_waiting_list</th>\n",
       "      <th>customer_type</th>\n",
       "      <th>adr</th>\n",
       "      <th>required_car_parking_spaces</th>\n",
       "      <th>total_of_special_requests</th>\n",
       "      <th>reservation_status</th>\n",
       "      <th>reservation_status_date</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Resort Hotel</td>\n",
       "      <td>0</td>\n",
       "      <td>342</td>\n",
       "      <td>2015</td>\n",
       "      <td>July</td>\n",
       "      <td>27</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>...</td>\n",
       "      <td>No Deposit</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>Transient</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>Check-Out</td>\n",
       "      <td>2015-07-01</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Resort Hotel</td>\n",
       "      <td>0</td>\n",
       "      <td>737</td>\n",
       "      <td>2015</td>\n",
       "      <td>July</td>\n",
       "      <td>27</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>...</td>\n",
       "      <td>No Deposit</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>Transient</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>Check-Out</td>\n",
       "      <td>2015-07-01</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Resort Hotel</td>\n",
       "      <td>0</td>\n",
       "      <td>7</td>\n",
       "      <td>2015</td>\n",
       "      <td>July</td>\n",
       "      <td>27</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>...</td>\n",
       "      <td>No Deposit</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>Transient</td>\n",
       "      <td>75.00</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>Check-Out</td>\n",
       "      <td>2015-07-02</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Resort Hotel</td>\n",
       "      <td>0</td>\n",
       "      <td>13</td>\n",
       "      <td>2015</td>\n",
       "      <td>July</td>\n",
       "      <td>27</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>...</td>\n",
       "      <td>No Deposit</td>\n",
       "      <td>304.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>Transient</td>\n",
       "      <td>75.00</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>Check-Out</td>\n",
       "      <td>2015-07-02</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Resort Hotel</td>\n",
       "      <td>0</td>\n",
       "      <td>14</td>\n",
       "      <td>2015</td>\n",
       "      <td>July</td>\n",
       "      <td>27</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>...</td>\n",
       "      <td>No Deposit</td>\n",
       "      <td>240.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>Transient</td>\n",
       "      <td>98.00</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>Check-Out</td>\n",
       "      <td>2015-07-03</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>119385</th>\n",
       "      <td>City Hotel</td>\n",
       "      <td>0</td>\n",
       "      <td>23</td>\n",
       "      <td>2017</td>\n",
       "      <td>August</td>\n",
       "      <td>35</td>\n",
       "      <td>30</td>\n",
       "      <td>2</td>\n",
       "      <td>5</td>\n",
       "      <td>2</td>\n",
       "      <td>...</td>\n",
       "      <td>No Deposit</td>\n",
       "      <td>394.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>Transient</td>\n",
       "      <td>96.14</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>Check-Out</td>\n",
       "      <td>2017-09-06</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>119386</th>\n",
       "      <td>City Hotel</td>\n",
       "      <td>0</td>\n",
       "      <td>102</td>\n",
       "      <td>2017</td>\n",
       "      <td>August</td>\n",
       "      <td>35</td>\n",
       "      <td>31</td>\n",
       "      <td>2</td>\n",
       "      <td>5</td>\n",
       "      <td>3</td>\n",
       "      <td>...</td>\n",
       "      <td>No Deposit</td>\n",
       "      <td>9.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>Transient</td>\n",
       "      <td>225.43</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>Check-Out</td>\n",
       "      <td>2017-09-07</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>119387</th>\n",
       "      <td>City Hotel</td>\n",
       "      <td>0</td>\n",
       "      <td>34</td>\n",
       "      <td>2017</td>\n",
       "      <td>August</td>\n",
       "      <td>35</td>\n",
       "      <td>31</td>\n",
       "      <td>2</td>\n",
       "      <td>5</td>\n",
       "      <td>2</td>\n",
       "      <td>...</td>\n",
       "      <td>No Deposit</td>\n",
       "      <td>9.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>Transient</td>\n",
       "      <td>157.71</td>\n",
       "      <td>0</td>\n",
       "      <td>4</td>\n",
       "      <td>Check-Out</td>\n",
       "      <td>2017-09-07</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>119388</th>\n",
       "      <td>City Hotel</td>\n",
       "      <td>0</td>\n",
       "      <td>109</td>\n",
       "      <td>2017</td>\n",
       "      <td>August</td>\n",
       "      <td>35</td>\n",
       "      <td>31</td>\n",
       "      <td>2</td>\n",
       "      <td>5</td>\n",
       "      <td>2</td>\n",
       "      <td>...</td>\n",
       "      <td>No Deposit</td>\n",
       "      <td>89.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>Transient</td>\n",
       "      <td>104.40</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>Check-Out</td>\n",
       "      <td>2017-09-07</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>119389</th>\n",
       "      <td>City Hotel</td>\n",
       "      <td>0</td>\n",
       "      <td>205</td>\n",
       "      <td>2017</td>\n",
       "      <td>August</td>\n",
       "      <td>35</td>\n",
       "      <td>29</td>\n",
       "      <td>2</td>\n",
       "      <td>7</td>\n",
       "      <td>2</td>\n",
       "      <td>...</td>\n",
       "      <td>No Deposit</td>\n",
       "      <td>9.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>Transient</td>\n",
       "      <td>151.20</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>Check-Out</td>\n",
       "      <td>2017-09-07</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>119390 rows × 32 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "               hotel  is_canceled  lead_time  arrival_date_year  \\\n",
       "0       Resort Hotel            0        342               2015   \n",
       "1       Resort Hotel            0        737               2015   \n",
       "2       Resort Hotel            0          7               2015   \n",
       "3       Resort Hotel            0         13               2015   \n",
       "4       Resort Hotel            0         14               2015   \n",
       "...              ...          ...        ...                ...   \n",
       "119385    City Hotel            0         23               2017   \n",
       "119386    City Hotel            0        102               2017   \n",
       "119387    City Hotel            0         34               2017   \n",
       "119388    City Hotel            0        109               2017   \n",
       "119389    City Hotel            0        205               2017   \n",
       "\n",
       "       arrival_date_month  arrival_date_week_number  \\\n",
       "0                    July                        27   \n",
       "1                    July                        27   \n",
       "2                    July                        27   \n",
       "3                    July                        27   \n",
       "4                    July                        27   \n",
       "...                   ...                       ...   \n",
       "119385             August                        35   \n",
       "119386             August                        35   \n",
       "119387             August                        35   \n",
       "119388             August                        35   \n",
       "119389             August                        35   \n",
       "\n",
       "        arrival_date_day_of_month  stays_in_weekend_nights  \\\n",
       "0                               1                        0   \n",
       "1                               1                        0   \n",
       "2                               1                        0   \n",
       "3                               1                        0   \n",
       "4                               1                        0   \n",
       "...                           ...                      ...   \n",
       "119385                         30                        2   \n",
       "119386                         31                        2   \n",
       "119387                         31                        2   \n",
       "119388                         31                        2   \n",
       "119389                         29                        2   \n",
       "\n",
       "        stays_in_week_nights  adults  ...  deposit_type  agent company  \\\n",
       "0                          0       2  ...    No Deposit    NaN     NaN   \n",
       "1                          0       2  ...    No Deposit    NaN     NaN   \n",
       "2                          1       1  ...    No Deposit    NaN     NaN   \n",
       "3                          1       1  ...    No Deposit  304.0     NaN   \n",
       "4                          2       2  ...    No Deposit  240.0     NaN   \n",
       "...                      ...     ...  ...           ...    ...     ...   \n",
       "119385                     5       2  ...    No Deposit  394.0     NaN   \n",
       "119386                     5       3  ...    No Deposit    9.0     NaN   \n",
       "119387                     5       2  ...    No Deposit    9.0     NaN   \n",
       "119388                     5       2  ...    No Deposit   89.0     NaN   \n",
       "119389                     7       2  ...    No Deposit    9.0     NaN   \n",
       "\n",
       "       days_in_waiting_list customer_type     adr  \\\n",
       "0                         0     Transient    0.00   \n",
       "1                         0     Transient    0.00   \n",
       "2                         0     Transient   75.00   \n",
       "3                         0     Transient   75.00   \n",
       "4                         0     Transient   98.00   \n",
       "...                     ...           ...     ...   \n",
       "119385                    0     Transient   96.14   \n",
       "119386                    0     Transient  225.43   \n",
       "119387                    0     Transient  157.71   \n",
       "119388                    0     Transient  104.40   \n",
       "119389                    0     Transient  151.20   \n",
       "\n",
       "        required_car_parking_spaces  total_of_special_requests  \\\n",
       "0                                 0                          0   \n",
       "1                                 0                          0   \n",
       "2                                 0                          0   \n",
       "3                                 0                          0   \n",
       "4                                 0                          1   \n",
       "...                             ...                        ...   \n",
       "119385                            0                          0   \n",
       "119386                            0                          2   \n",
       "119387                            0                          4   \n",
       "119388                            0                          0   \n",
       "119389                            0                          2   \n",
       "\n",
       "        reservation_status reservation_status_date  \n",
       "0                Check-Out              2015-07-01  \n",
       "1                Check-Out              2015-07-01  \n",
       "2                Check-Out              2015-07-02  \n",
       "3                Check-Out              2015-07-02  \n",
       "4                Check-Out              2015-07-03  \n",
       "...                    ...                     ...  \n",
       "119385           Check-Out              2017-09-06  \n",
       "119386           Check-Out              2017-09-07  \n",
       "119387           Check-Out              2017-09-07  \n",
       "119388           Check-Out              2017-09-07  \n",
       "119389           Check-Out              2017-09-07  \n",
       "\n",
       "[119390 rows x 32 columns]"
      ]
     },
     "execution_count": 102,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data = pd.read_csv(r\"hotels.csv\", delimiter=',')\n",
    "data "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 103,
   "metadata": {
    "id": "i563Uw-iEGBb",
    "outputId": "6f4170b4-de0d-4d6d-f688-83c9e2922f13"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>hotel</th>\n",
       "      <th>is_canceled</th>\n",
       "      <th>lead_time</th>\n",
       "      <th>arrival_date_year</th>\n",
       "      <th>arrival_date_month</th>\n",
       "      <th>arrival_date_week_number</th>\n",
       "      <th>arrival_date_day_of_month</th>\n",
       "      <th>stays_in_weekend_nights</th>\n",
       "      <th>stays_in_week_nights</th>\n",
       "      <th>adults</th>\n",
       "      <th>...</th>\n",
       "      <th>deposit_type</th>\n",
       "      <th>agent</th>\n",
       "      <th>company</th>\n",
       "      <th>days_in_waiting_list</th>\n",
       "      <th>customer_type</th>\n",
       "      <th>adr</th>\n",
       "      <th>required_car_parking_spaces</th>\n",
       "      <th>total_of_special_requests</th>\n",
       "      <th>reservation_status</th>\n",
       "      <th>reservation_status_date</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Resort Hotel</td>\n",
       "      <td>0</td>\n",
       "      <td>342</td>\n",
       "      <td>2015</td>\n",
       "      <td>July</td>\n",
       "      <td>27</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>...</td>\n",
       "      <td>No Deposit</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>Transient</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>Check-Out</td>\n",
       "      <td>2015-07-01</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Resort Hotel</td>\n",
       "      <td>0</td>\n",
       "      <td>737</td>\n",
       "      <td>2015</td>\n",
       "      <td>July</td>\n",
       "      <td>27</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>...</td>\n",
       "      <td>No Deposit</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>Transient</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>Check-Out</td>\n",
       "      <td>2015-07-01</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Resort Hotel</td>\n",
       "      <td>0</td>\n",
       "      <td>7</td>\n",
       "      <td>2015</td>\n",
       "      <td>July</td>\n",
       "      <td>27</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>...</td>\n",
       "      <td>No Deposit</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>Transient</td>\n",
       "      <td>75.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>Check-Out</td>\n",
       "      <td>2015-07-02</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Resort Hotel</td>\n",
       "      <td>0</td>\n",
       "      <td>13</td>\n",
       "      <td>2015</td>\n",
       "      <td>July</td>\n",
       "      <td>27</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>...</td>\n",
       "      <td>No Deposit</td>\n",
       "      <td>304.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>Transient</td>\n",
       "      <td>75.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>Check-Out</td>\n",
       "      <td>2015-07-02</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Resort Hotel</td>\n",
       "      <td>0</td>\n",
       "      <td>14</td>\n",
       "      <td>2015</td>\n",
       "      <td>July</td>\n",
       "      <td>27</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>...</td>\n",
       "      <td>No Deposit</td>\n",
       "      <td>240.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>Transient</td>\n",
       "      <td>98.0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>Check-Out</td>\n",
       "      <td>2015-07-03</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 32 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "          hotel  is_canceled  lead_time  arrival_date_year arrival_date_month  \\\n",
       "0  Resort Hotel            0        342               2015               July   \n",
       "1  Resort Hotel            0        737               2015               July   \n",
       "2  Resort Hotel            0          7               2015               July   \n",
       "3  Resort Hotel            0         13               2015               July   \n",
       "4  Resort Hotel            0         14               2015               July   \n",
       "\n",
       "   arrival_date_week_number  arrival_date_day_of_month  \\\n",
       "0                        27                          1   \n",
       "1                        27                          1   \n",
       "2                        27                          1   \n",
       "3                        27                          1   \n",
       "4                        27                          1   \n",
       "\n",
       "   stays_in_weekend_nights  stays_in_week_nights  adults  ...  deposit_type  \\\n",
       "0                        0                     0       2  ...    No Deposit   \n",
       "1                        0                     0       2  ...    No Deposit   \n",
       "2                        0                     1       1  ...    No Deposit   \n",
       "3                        0                     1       1  ...    No Deposit   \n",
       "4                        0                     2       2  ...    No Deposit   \n",
       "\n",
       "   agent company days_in_waiting_list customer_type   adr  \\\n",
       "0    NaN     NaN                    0     Transient   0.0   \n",
       "1    NaN     NaN                    0     Transient   0.0   \n",
       "2    NaN     NaN                    0     Transient  75.0   \n",
       "3  304.0     NaN                    0     Transient  75.0   \n",
       "4  240.0     NaN                    0     Transient  98.0   \n",
       "\n",
       "   required_car_parking_spaces  total_of_special_requests  reservation_status  \\\n",
       "0                            0                          0           Check-Out   \n",
       "1                            0                          0           Check-Out   \n",
       "2                            0                          0           Check-Out   \n",
       "3                            0                          0           Check-Out   \n",
       "4                            0                          1           Check-Out   \n",
       "\n",
       "  reservation_status_date  \n",
       "0              2015-07-01  \n",
       "1              2015-07-01  \n",
       "2              2015-07-02  \n",
       "3              2015-07-02  \n",
       "4              2015-07-03  \n",
       "\n",
       "[5 rows x 32 columns]"
      ]
     },
     "execution_count": 103,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 104,
   "metadata": {
    "id": "O1oBIOqsEGBc",
    "outputId": "14f11181-776d-4b04-d582-20d17099770e"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "hotel                              object\n",
       "is_canceled                         int64\n",
       "lead_time                           int64\n",
       "arrival_date_year                   int64\n",
       "arrival_date_month                 object\n",
       "arrival_date_week_number            int64\n",
       "arrival_date_day_of_month           int64\n",
       "stays_in_weekend_nights             int64\n",
       "stays_in_week_nights                int64\n",
       "adults                              int64\n",
       "children                          float64\n",
       "babies                              int64\n",
       "meal                               object\n",
       "country                            object\n",
       "market_segment                     object\n",
       "distribution_channel               object\n",
       "is_repeated_guest                   int64\n",
       "previous_cancellations              int64\n",
       "previous_bookings_not_canceled      int64\n",
       "reserved_room_type                 object\n",
       "assigned_room_type                 object\n",
       "booking_changes                     int64\n",
       "deposit_type                       object\n",
       "agent                             float64\n",
       "company                           float64\n",
       "days_in_waiting_list                int64\n",
       "customer_type                      object\n",
       "adr                               float64\n",
       "required_car_parking_spaces         int64\n",
       "total_of_special_requests           int64\n",
       "reservation_status                 object\n",
       "reservation_status_date            object\n",
       "dtype: object"
      ]
     },
     "execution_count": 104,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.dtypes"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 105,
   "metadata": {
    "id": "0NUJS_N8EGBc",
    "outputId": "1a709a1e-4640-4b29-de25-de400ca92eaf"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 119390 entries, 0 to 119389\n",
      "Data columns (total 32 columns):\n",
      " #   Column                          Non-Null Count   Dtype  \n",
      "---  ------                          --------------   -----  \n",
      " 0   hotel                           119390 non-null  object \n",
      " 1   is_canceled                     119390 non-null  int64  \n",
      " 2   lead_time                       119390 non-null  int64  \n",
      " 3   arrival_date_year               119390 non-null  int64  \n",
      " 4   arrival_date_month              119390 non-null  object \n",
      " 5   arrival_date_week_number        119390 non-null  int64  \n",
      " 6   arrival_date_day_of_month       119390 non-null  int64  \n",
      " 7   stays_in_weekend_nights         119390 non-null  int64  \n",
      " 8   stays_in_week_nights            119390 non-null  int64  \n",
      " 9   adults                          119390 non-null  int64  \n",
      " 10  children                        119386 non-null  float64\n",
      " 11  babies                          119390 non-null  int64  \n",
      " 12  meal                            119390 non-null  object \n",
      " 13  country                         118902 non-null  object \n",
      " 14  market_segment                  119390 non-null  object \n",
      " 15  distribution_channel            119390 non-null  object \n",
      " 16  is_repeated_guest               119390 non-null  int64  \n",
      " 17  previous_cancellations          119390 non-null  int64  \n",
      " 18  previous_bookings_not_canceled  119390 non-null  int64  \n",
      " 19  reserved_room_type              119390 non-null  object \n",
      " 20  assigned_room_type              119390 non-null  object \n",
      " 21  booking_changes                 119390 non-null  int64  \n",
      " 22  deposit_type                    119390 non-null  object \n",
      " 23  agent                           103050 non-null  float64\n",
      " 24  company                         6797 non-null    float64\n",
      " 25  days_in_waiting_list            119390 non-null  int64  \n",
      " 26  customer_type                   119390 non-null  object \n",
      " 27  adr                             119390 non-null  float64\n",
      " 28  required_car_parking_spaces     119390 non-null  int64  \n",
      " 29  total_of_special_requests       119390 non-null  int64  \n",
      " 30  reservation_status              119390 non-null  object \n",
      " 31  reservation_status_date         119390 non-null  object \n",
      "dtypes: float64(4), int64(16), object(12)\n",
      "memory usage: 29.1+ MB\n"
     ]
    }
   ],
   "source": [
    "# Print info of DataFrame\n",
    "data.info()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "7fRNEFqUEGBf"
   },
   "source": [
    "# II. Data preprocessing"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 106,
   "metadata": {
    "id": "k-cnbSDWEGBi",
    "outputId": "d2c39b4b-a83a-4334-99cb-b6280b7df083"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "hotel                                  0\n",
       "is_canceled                            0\n",
       "lead_time                              0\n",
       "arrival_date_year                      0\n",
       "arrival_date_month                     0\n",
       "arrival_date_week_number               0\n",
       "arrival_date_day_of_month              0\n",
       "stays_in_weekend_nights                0\n",
       "stays_in_week_nights                   0\n",
       "adults                                 0\n",
       "children                               4\n",
       "babies                                 0\n",
       "meal                                   0\n",
       "country                              488\n",
       "market_segment                         0\n",
       "distribution_channel                   0\n",
       "is_repeated_guest                      0\n",
       "previous_cancellations                 0\n",
       "previous_bookings_not_canceled         0\n",
       "reserved_room_type                     0\n",
       "assigned_room_type                     0\n",
       "booking_changes                        0\n",
       "deposit_type                           0\n",
       "agent                              16340\n",
       "company                           112593\n",
       "days_in_waiting_list                   0\n",
       "customer_type                          0\n",
       "adr                                    0\n",
       "required_car_parking_spaces            0\n",
       "total_of_special_requests              0\n",
       "reservation_status                     0\n",
       "reservation_status_date                0\n",
       "dtype: int64"
      ]
     },
     "execution_count": 106,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Print number of missing values\n",
    "data.isna().sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 107,
   "metadata": {
    "id": "Cwbu3ITkEGBk",
    "outputId": "65c9d880-0959-4312-be98-c83861af82e9"
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1800x720 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "msno.matrix(data)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 108,
   "metadata": {
    "id": "1SDwCbHYEGBl",
    "outputId": "554edc1c-abb3-4af0-fda8-67fc1581f566"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:>"
      ]
     },
     "execution_count": 108,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1728x720 with 3 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "msno.bar(data)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 109,
   "metadata": {
    "id": "yJQq1_yDEGBm"
   },
   "outputs": [],
   "source": [
    "#Drop rows having missing values except for variables like Agent or Company\n",
    "\n",
    "data = data.dropna(subset=['country', 'children']).reset_index(drop=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 110,
   "metadata": {
    "id": "sYWkCdomEGBm",
    "outputId": "8fc47c74-852e-46dc-f003-915d7b5187de"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "hotel                                  0\n",
       "is_canceled                            0\n",
       "lead_time                              0\n",
       "arrival_date_year                      0\n",
       "arrival_date_month                     0\n",
       "arrival_date_week_number               0\n",
       "arrival_date_day_of_month              0\n",
       "stays_in_weekend_nights                0\n",
       "stays_in_week_nights                   0\n",
       "adults                                 0\n",
       "children                               0\n",
       "babies                                 0\n",
       "meal                                   0\n",
       "country                                0\n",
       "market_segment                         0\n",
       "distribution_channel                   0\n",
       "is_repeated_guest                      0\n",
       "previous_cancellations                 0\n",
       "previous_bookings_not_canceled         0\n",
       "reserved_room_type                     0\n",
       "assigned_room_type                     0\n",
       "booking_changes                        0\n",
       "deposit_type                           0\n",
       "agent                              16004\n",
       "company                           112275\n",
       "days_in_waiting_list                   0\n",
       "customer_type                          0\n",
       "adr                                    0\n",
       "required_car_parking_spaces            0\n",
       "total_of_special_requests              0\n",
       "reservation_status                     0\n",
       "reservation_status_date                0\n",
       "dtype: int64"
      ]
     },
     "execution_count": 110,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.isna().sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 111,
   "metadata": {
    "id": "VLBNvU35EGBn",
    "outputId": "51e8a051-32b8-43d5-93ac-86c243c03545"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0        2015-07-01\n",
       "1        2015-07-01\n",
       "2        2015-07-01\n",
       "3        2015-07-01\n",
       "4        2015-07-01\n",
       "            ...    \n",
       "118893   2017-08-30\n",
       "118894   2017-08-31\n",
       "118895   2017-08-31\n",
       "118896   2017-08-31\n",
       "118897   2017-08-29\n",
       "Name: arrival_date, Length: 118898, dtype: datetime64[ns]"
      ]
     },
     "execution_count": 111,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Replace mouths from names to numbers\n",
    "mapp = {'January': '01', \n",
    "            'February': '02',\n",
    "            'March': '03',\n",
    "            'April': '04',\n",
    "            'May': '05',\n",
    "            'June':'06',\n",
    "            'July':'07',\n",
    "            'August':'08',\n",
    "            'September':'09',\n",
    "            'October':'10',\n",
    "            'November':'11',\n",
    "            'December': '12'}\n",
    "\n",
    "data['arrival_date_month'] = data['arrival_date_month'].replace(mapp)\n",
    "data['arrival_date'] = pd.to_datetime(data[['arrival_date_year','arrival_date_month','arrival_date_day_of_month']].apply(\n",
    "    lambda x: '-'.join(x.dropna().astype(str)),axis=1))\n",
    "data['arrival_date']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 112,
   "metadata": {
    "id": "GJxd6-TDEGBo"
   },
   "outputs": [],
   "source": [
    "data.drop(['arrival_date_year','arrival_date_month', 'arrival_date_day_of_month'], axis=1, inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 113,
   "metadata": {
    "id": "DyTydE7IEGBp",
    "outputId": "f9a52420-4863-4123-aaab-7be0667ba7e4"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>hotel</th>\n",
       "      <th>is_canceled</th>\n",
       "      <th>lead_time</th>\n",
       "      <th>arrival_date_week_number</th>\n",
       "      <th>stays_in_weekend_nights</th>\n",
       "      <th>stays_in_week_nights</th>\n",
       "      <th>adults</th>\n",
       "      <th>children</th>\n",
       "      <th>babies</th>\n",
       "      <th>meal</th>\n",
       "      <th>...</th>\n",
       "      <th>agent</th>\n",
       "      <th>company</th>\n",
       "      <th>days_in_waiting_list</th>\n",
       "      <th>customer_type</th>\n",
       "      <th>adr</th>\n",
       "      <th>required_car_parking_spaces</th>\n",
       "      <th>total_of_special_requests</th>\n",
       "      <th>reservation_status</th>\n",
       "      <th>reservation_status_date</th>\n",
       "      <th>arrival_date</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Resort Hotel</td>\n",
       "      <td>0</td>\n",
       "      <td>342</td>\n",
       "      <td>27</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>BB</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>Transient</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>Check-Out</td>\n",
       "      <td>2015-07-01</td>\n",
       "      <td>2015-07-01</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Resort Hotel</td>\n",
       "      <td>0</td>\n",
       "      <td>737</td>\n",
       "      <td>27</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>BB</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>Transient</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>Check-Out</td>\n",
       "      <td>2015-07-01</td>\n",
       "      <td>2015-07-01</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Resort Hotel</td>\n",
       "      <td>0</td>\n",
       "      <td>7</td>\n",
       "      <td>27</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>BB</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>Transient</td>\n",
       "      <td>75.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>Check-Out</td>\n",
       "      <td>2015-07-02</td>\n",
       "      <td>2015-07-01</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Resort Hotel</td>\n",
       "      <td>0</td>\n",
       "      <td>13</td>\n",
       "      <td>27</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>BB</td>\n",
       "      <td>...</td>\n",
       "      <td>304.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>Transient</td>\n",
       "      <td>75.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>Check-Out</td>\n",
       "      <td>2015-07-02</td>\n",
       "      <td>2015-07-01</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Resort Hotel</td>\n",
       "      <td>0</td>\n",
       "      <td>14</td>\n",
       "      <td>27</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>BB</td>\n",
       "      <td>...</td>\n",
       "      <td>240.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>Transient</td>\n",
       "      <td>98.0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>Check-Out</td>\n",
       "      <td>2015-07-03</td>\n",
       "      <td>2015-07-01</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 30 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "          hotel  is_canceled  lead_time  arrival_date_week_number  \\\n",
       "0  Resort Hotel            0        342                        27   \n",
       "1  Resort Hotel            0        737                        27   \n",
       "2  Resort Hotel            0          7                        27   \n",
       "3  Resort Hotel            0         13                        27   \n",
       "4  Resort Hotel            0         14                        27   \n",
       "\n",
       "   stays_in_weekend_nights  stays_in_week_nights  adults  children  babies  \\\n",
       "0                        0                     0       2       0.0       0   \n",
       "1                        0                     0       2       0.0       0   \n",
       "2                        0                     1       1       0.0       0   \n",
       "3                        0                     1       1       0.0       0   \n",
       "4                        0                     2       2       0.0       0   \n",
       "\n",
       "  meal  ...  agent company days_in_waiting_list  customer_type   adr  \\\n",
       "0   BB  ...    NaN     NaN                    0      Transient   0.0   \n",
       "1   BB  ...    NaN     NaN                    0      Transient   0.0   \n",
       "2   BB  ...    NaN     NaN                    0      Transient  75.0   \n",
       "3   BB  ...  304.0     NaN                    0      Transient  75.0   \n",
       "4   BB  ...  240.0     NaN                    0      Transient  98.0   \n",
       "\n",
       "   required_car_parking_spaces total_of_special_requests reservation_status  \\\n",
       "0                            0                         0          Check-Out   \n",
       "1                            0                         0          Check-Out   \n",
       "2                            0                         0          Check-Out   \n",
       "3                            0                         0          Check-Out   \n",
       "4                            0                         1          Check-Out   \n",
       "\n",
       "   reservation_status_date arrival_date  \n",
       "0               2015-07-01   2015-07-01  \n",
       "1               2015-07-01   2015-07-01  \n",
       "2               2015-07-02   2015-07-01  \n",
       "3               2015-07-02   2015-07-01  \n",
       "4               2015-07-03   2015-07-01  \n",
       "\n",
       "[5 rows x 30 columns]"
      ]
     },
     "execution_count": 113,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 114,
   "metadata": {
    "id": "R0UGqMnaEGBp",
    "outputId": "801f336d-f39c-425b-ee36-045ed797e0ca"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0        2015-07-01\n",
       "1        2015-07-01\n",
       "2        2015-07-02\n",
       "3        2015-07-02\n",
       "4        2015-07-03\n",
       "            ...    \n",
       "118893   2017-09-06\n",
       "118894   2017-09-07\n",
       "118895   2017-09-07\n",
       "118896   2017-09-07\n",
       "118897   2017-09-07\n",
       "Name: reservation_status_date, Length: 118898, dtype: datetime64[ns]"
      ]
     },
     "execution_count": 114,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data['reservation_status_date'] = pd.to_datetime(data['reservation_status_date'], format = '%Y-%m-%d')\n",
    "\n",
    "data['reservation_status_date']"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "uOy7iYH7EGBq"
   },
   "source": [
    "### Pour  reservation status check-out reservation_status_date doit etre superieure ou egale a arrival_date"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 115,
   "metadata": {
    "id": "J99Sa_WtEGBq",
    "outputId": "a1b144f5-347a-4cd9-a020-e66dd5e2bee3"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "reservation_status\n",
       "Canceled    42086\n",
       "No-Show         1\n",
       "Name: arrival_date, dtype: int64"
      ]
     },
     "execution_count": 115,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "\n",
    "df = data[data['reservation_status_date']<data['arrival_date']]\n",
    "df.groupby(['reservation_status'])['arrival_date'].count()\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "bCreU7OwEGBq"
   },
   "source": [
    "### Nous avons aucun Check-Out reservation qui a ete faite avant la date d'arrive"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "zXEGXWG2EGBr"
   },
   "source": [
    "### Pour  la reservation qui a ete annuler par le client  reservation_status_date doit etre inferieure  ou egale a arrival_date,  verifions si nous avons une contradiction tel que le date de l'annulation est superieur au date d'arrive"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 116,
   "metadata": {
    "id": "5T2T17TqEGBr",
    "outputId": "44e4693d-5dda-4355-8183-3fd9cb4b24fa"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0\n"
     ]
    }
   ],
   "source": [
    " df1 = data[data['reservation_status'] == 'Canceled'] \n",
    "print(df1[df1['reservation_status_date']>df1['arrival_date']]['arrival_date'].count())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 117,
   "metadata": {
    "id": "85L5x_rsEGBs",
    "outputId": "8a9ad4fc-05dd-47ed-c958-fbf6a41b3f85"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array(['Transient', 'Contract', 'Transient-Party', 'Group'], dtype=object)"
      ]
     },
     "execution_count": 117,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data['customer_type'].unique()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "A_pliMPtEGBs"
   },
   "source": [
    "### Data Standardization"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 118,
   "metadata": {
    "id": "MYXxO67ZEGBt",
    "outputId": "20413dbb-72f1-4c62-f8e8-8115fefc46b3"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>hotel</th>\n",
       "      <th>is_canceled</th>\n",
       "      <th>arrival_date_week_number</th>\n",
       "      <th>meal</th>\n",
       "      <th>country</th>\n",
       "      <th>market_segment</th>\n",
       "      <th>distribution_channel</th>\n",
       "      <th>is_repeated_guest</th>\n",
       "      <th>reserved_room_type</th>\n",
       "      <th>assigned_room_type</th>\n",
       "      <th>...</th>\n",
       "      <th>lead time</th>\n",
       "      <th>stays in weekend nights</th>\n",
       "      <th>stays in week nights</th>\n",
       "      <th>adults</th>\n",
       "      <th>children</th>\n",
       "      <th>babies</th>\n",
       "      <th>previous cancellations</th>\n",
       "      <th>previous bookings not canceled</th>\n",
       "      <th>booking changes</th>\n",
       "      <th>days in waiting list</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Resort Hotel</td>\n",
       "      <td>0</td>\n",
       "      <td>27</td>\n",
       "      <td>BB</td>\n",
       "      <td>PRT</td>\n",
       "      <td>Direct</td>\n",
       "      <td>Direct</td>\n",
       "      <td>0</td>\n",
       "      <td>C</td>\n",
       "      <td>C</td>\n",
       "      <td>...</td>\n",
       "      <td>2.223407</td>\n",
       "      <td>-0.932429</td>\n",
       "      <td>-1.316808</td>\n",
       "      <td>0.244755</td>\n",
       "      <td>-0.261059</td>\n",
       "      <td>-0.081618</td>\n",
       "      <td>-0.103021</td>\n",
       "      <td>-0.088662</td>\n",
       "      <td>4.256884</td>\n",
       "      <td>-0.132201</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Resort Hotel</td>\n",
       "      <td>0</td>\n",
       "      <td>27</td>\n",
       "      <td>BB</td>\n",
       "      <td>PRT</td>\n",
       "      <td>Direct</td>\n",
       "      <td>Direct</td>\n",
       "      <td>0</td>\n",
       "      <td>C</td>\n",
       "      <td>C</td>\n",
       "      <td>...</td>\n",
       "      <td>5.918350</td>\n",
       "      <td>-0.932429</td>\n",
       "      <td>-1.316808</td>\n",
       "      <td>0.244755</td>\n",
       "      <td>-0.261059</td>\n",
       "      <td>-0.081618</td>\n",
       "      <td>-0.103021</td>\n",
       "      <td>-0.088662</td>\n",
       "      <td>5.788789</td>\n",
       "      <td>-0.132201</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Resort Hotel</td>\n",
       "      <td>0</td>\n",
       "      <td>27</td>\n",
       "      <td>BB</td>\n",
       "      <td>GBR</td>\n",
       "      <td>Direct</td>\n",
       "      <td>Direct</td>\n",
       "      <td>0</td>\n",
       "      <td>A</td>\n",
       "      <td>C</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.910279</td>\n",
       "      <td>-0.932429</td>\n",
       "      <td>-0.790536</td>\n",
       "      <td>-1.483635</td>\n",
       "      <td>-0.261059</td>\n",
       "      <td>-0.081618</td>\n",
       "      <td>-0.103021</td>\n",
       "      <td>-0.088662</td>\n",
       "      <td>-0.338828</td>\n",
       "      <td>-0.132201</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Resort Hotel</td>\n",
       "      <td>0</td>\n",
       "      <td>27</td>\n",
       "      <td>BB</td>\n",
       "      <td>GBR</td>\n",
       "      <td>Corporate</td>\n",
       "      <td>Corporate</td>\n",
       "      <td>0</td>\n",
       "      <td>A</td>\n",
       "      <td>A</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.854153</td>\n",
       "      <td>-0.932429</td>\n",
       "      <td>-0.790536</td>\n",
       "      <td>-1.483635</td>\n",
       "      <td>-0.261059</td>\n",
       "      <td>-0.081618</td>\n",
       "      <td>-0.103021</td>\n",
       "      <td>-0.088662</td>\n",
       "      <td>-0.338828</td>\n",
       "      <td>-0.132201</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Resort Hotel</td>\n",
       "      <td>0</td>\n",
       "      <td>27</td>\n",
       "      <td>BB</td>\n",
       "      <td>GBR</td>\n",
       "      <td>Online TA</td>\n",
       "      <td>TA/TO</td>\n",
       "      <td>0</td>\n",
       "      <td>A</td>\n",
       "      <td>A</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.844799</td>\n",
       "      <td>-0.932429</td>\n",
       "      <td>-0.264264</td>\n",
       "      <td>0.244755</td>\n",
       "      <td>-0.261059</td>\n",
       "      <td>-0.081618</td>\n",
       "      <td>-0.103021</td>\n",
       "      <td>-0.088662</td>\n",
       "      <td>-0.338828</td>\n",
       "      <td>-0.132201</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>118893</th>\n",
       "      <td>City Hotel</td>\n",
       "      <td>0</td>\n",
       "      <td>35</td>\n",
       "      <td>BB</td>\n",
       "      <td>BEL</td>\n",
       "      <td>Offline TA/TO</td>\n",
       "      <td>TA/TO</td>\n",
       "      <td>0</td>\n",
       "      <td>A</td>\n",
       "      <td>A</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.760610</td>\n",
       "      <td>1.075176</td>\n",
       "      <td>1.314550</td>\n",
       "      <td>0.244755</td>\n",
       "      <td>-0.261059</td>\n",
       "      <td>-0.081618</td>\n",
       "      <td>-0.103021</td>\n",
       "      <td>-0.088662</td>\n",
       "      <td>-0.338828</td>\n",
       "      <td>-0.132201</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>118894</th>\n",
       "      <td>City Hotel</td>\n",
       "      <td>0</td>\n",
       "      <td>35</td>\n",
       "      <td>BB</td>\n",
       "      <td>FRA</td>\n",
       "      <td>Online TA</td>\n",
       "      <td>TA/TO</td>\n",
       "      <td>0</td>\n",
       "      <td>E</td>\n",
       "      <td>E</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.021622</td>\n",
       "      <td>1.075176</td>\n",
       "      <td>1.314550</td>\n",
       "      <td>1.973145</td>\n",
       "      <td>-0.261059</td>\n",
       "      <td>-0.081618</td>\n",
       "      <td>-0.103021</td>\n",
       "      <td>-0.088662</td>\n",
       "      <td>-0.338828</td>\n",
       "      <td>-0.132201</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>118895</th>\n",
       "      <td>City Hotel</td>\n",
       "      <td>0</td>\n",
       "      <td>35</td>\n",
       "      <td>BB</td>\n",
       "      <td>DEU</td>\n",
       "      <td>Online TA</td>\n",
       "      <td>TA/TO</td>\n",
       "      <td>0</td>\n",
       "      <td>D</td>\n",
       "      <td>D</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.657713</td>\n",
       "      <td>1.075176</td>\n",
       "      <td>1.314550</td>\n",
       "      <td>0.244755</td>\n",
       "      <td>-0.261059</td>\n",
       "      <td>-0.081618</td>\n",
       "      <td>-0.103021</td>\n",
       "      <td>-0.088662</td>\n",
       "      <td>-0.338828</td>\n",
       "      <td>-0.132201</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>118896</th>\n",
       "      <td>City Hotel</td>\n",
       "      <td>0</td>\n",
       "      <td>35</td>\n",
       "      <td>BB</td>\n",
       "      <td>GBR</td>\n",
       "      <td>Online TA</td>\n",
       "      <td>TA/TO</td>\n",
       "      <td>0</td>\n",
       "      <td>A</td>\n",
       "      <td>A</td>\n",
       "      <td>...</td>\n",
       "      <td>0.043858</td>\n",
       "      <td>1.075176</td>\n",
       "      <td>1.314550</td>\n",
       "      <td>0.244755</td>\n",
       "      <td>-0.261059</td>\n",
       "      <td>-0.081618</td>\n",
       "      <td>-0.103021</td>\n",
       "      <td>-0.088662</td>\n",
       "      <td>-0.338828</td>\n",
       "      <td>-0.132201</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>118897</th>\n",
       "      <td>City Hotel</td>\n",
       "      <td>0</td>\n",
       "      <td>35</td>\n",
       "      <td>HB</td>\n",
       "      <td>DEU</td>\n",
       "      <td>Online TA</td>\n",
       "      <td>TA/TO</td>\n",
       "      <td>0</td>\n",
       "      <td>A</td>\n",
       "      <td>A</td>\n",
       "      <td>...</td>\n",
       "      <td>0.941870</td>\n",
       "      <td>1.075176</td>\n",
       "      <td>2.367093</td>\n",
       "      <td>0.244755</td>\n",
       "      <td>-0.261059</td>\n",
       "      <td>-0.081618</td>\n",
       "      <td>-0.103021</td>\n",
       "      <td>-0.088662</td>\n",
       "      <td>-0.338828</td>\n",
       "      <td>-0.132201</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>118898 rows × 30 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "               hotel  is_canceled  arrival_date_week_number meal country  \\\n",
       "0       Resort Hotel            0                        27   BB     PRT   \n",
       "1       Resort Hotel            0                        27   BB     PRT   \n",
       "2       Resort Hotel            0                        27   BB     GBR   \n",
       "3       Resort Hotel            0                        27   BB     GBR   \n",
       "4       Resort Hotel            0                        27   BB     GBR   \n",
       "...              ...          ...                       ...  ...     ...   \n",
       "118893    City Hotel            0                        35   BB     BEL   \n",
       "118894    City Hotel            0                        35   BB     FRA   \n",
       "118895    City Hotel            0                        35   BB     DEU   \n",
       "118896    City Hotel            0                        35   BB     GBR   \n",
       "118897    City Hotel            0                        35   HB     DEU   \n",
       "\n",
       "       market_segment distribution_channel  is_repeated_guest  \\\n",
       "0              Direct               Direct                  0   \n",
       "1              Direct               Direct                  0   \n",
       "2              Direct               Direct                  0   \n",
       "3           Corporate            Corporate                  0   \n",
       "4           Online TA                TA/TO                  0   \n",
       "...               ...                  ...                ...   \n",
       "118893  Offline TA/TO                TA/TO                  0   \n",
       "118894      Online TA                TA/TO                  0   \n",
       "118895      Online TA                TA/TO                  0   \n",
       "118896      Online TA                TA/TO                  0   \n",
       "118897      Online TA                TA/TO                  0   \n",
       "\n",
       "       reserved_room_type assigned_room_type  ... lead time  \\\n",
       "0                       C                  C  ...  2.223407   \n",
       "1                       C                  C  ...  5.918350   \n",
       "2                       A                  C  ... -0.910279   \n",
       "3                       A                  A  ... -0.854153   \n",
       "4                       A                  A  ... -0.844799   \n",
       "...                   ...                ...  ...       ...   \n",
       "118893                  A                  A  ... -0.760610   \n",
       "118894                  E                  E  ... -0.021622   \n",
       "118895                  D                  D  ... -0.657713   \n",
       "118896                  A                  A  ...  0.043858   \n",
       "118897                  A                  A  ...  0.941870   \n",
       "\n",
       "        stays in weekend nights  stays in week nights   adults   children   \\\n",
       "0                     -0.932429             -1.316808  0.244755  -0.261059   \n",
       "1                     -0.932429             -1.316808  0.244755  -0.261059   \n",
       "2                     -0.932429             -0.790536 -1.483635  -0.261059   \n",
       "3                     -0.932429             -0.790536 -1.483635  -0.261059   \n",
       "4                     -0.932429             -0.264264  0.244755  -0.261059   \n",
       "...                         ...                   ...       ...        ...   \n",
       "118893                 1.075176              1.314550  0.244755  -0.261059   \n",
       "118894                 1.075176              1.314550  1.973145  -0.261059   \n",
       "118895                 1.075176              1.314550  0.244755  -0.261059   \n",
       "118896                 1.075176              1.314550  0.244755  -0.261059   \n",
       "118897                 1.075176              2.367093  0.244755  -0.261059   \n",
       "\n",
       "         babies   previous cancellations previous bookings not canceled  \\\n",
       "0      -0.081618               -0.103021                      -0.088662   \n",
       "1      -0.081618               -0.103021                      -0.088662   \n",
       "2      -0.081618               -0.103021                      -0.088662   \n",
       "3      -0.081618               -0.103021                      -0.088662   \n",
       "4      -0.081618               -0.103021                      -0.088662   \n",
       "...          ...                     ...                            ...   \n",
       "118893 -0.081618               -0.103021                      -0.088662   \n",
       "118894 -0.081618               -0.103021                      -0.088662   \n",
       "118895 -0.081618               -0.103021                      -0.088662   \n",
       "118896 -0.081618               -0.103021                      -0.088662   \n",
       "118897 -0.081618               -0.103021                      -0.088662   \n",
       "\n",
       "       booking changes days in waiting list  \n",
       "0             4.256884            -0.132201  \n",
       "1             5.788789            -0.132201  \n",
       "2            -0.338828            -0.132201  \n",
       "3            -0.338828            -0.132201  \n",
       "4            -0.338828            -0.132201  \n",
       "...                ...                  ...  \n",
       "118893       -0.338828            -0.132201  \n",
       "118894       -0.338828            -0.132201  \n",
       "118895       -0.338828            -0.132201  \n",
       "118896       -0.338828            -0.132201  \n",
       "118897       -0.338828            -0.132201  \n",
       "\n",
       "[118898 rows x 30 columns]"
      ]
     },
     "execution_count": 118,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from sklearn.preprocessing import StandardScaler\n",
    "col_names = ['lead_time', 'stays_in_weekend_nights', 'stays_in_week_nights','adults','children','babies',\n",
    "             'previous_cancellations','previous_bookings_not_canceled','booking_changes','days_in_waiting_list']\n",
    "col_names_new = ['lead time', 'stays in weekend nights', 'stays in week nights','adults ','children ','babies ',\n",
    "             'previous cancellations','previous bookings not canceled','booking changes','days in waiting list']\n",
    "sc = StandardScaler()\n",
    "scaled_values = sc.fit_transform(data[col_names].values)\n",
    "scaled_df = pd.DataFrame(scaled_values, columns = col_names_new)\n",
    "df3 = pd.concat([data, scaled_df], axis=1)\n",
    "df3.drop(col_names , axis = 1, inplace = True)\n",
    "dataset = df3.copy()\n",
    "dataset"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 119,
   "metadata": {
    "id": "w9dHZoq-EGBt",
    "outputId": "7d5744e6-59d9-4a07-bad5-7ee5ff90219a"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>hotel</th>\n",
       "      <th>is_canceled</th>\n",
       "      <th>arrival_date_week_number</th>\n",
       "      <th>meal</th>\n",
       "      <th>country</th>\n",
       "      <th>market_segment</th>\n",
       "      <th>distribution_channel</th>\n",
       "      <th>is_repeated_guest</th>\n",
       "      <th>reserved_room_type</th>\n",
       "      <th>assigned_room_type</th>\n",
       "      <th>...</th>\n",
       "      <th>lead time</th>\n",
       "      <th>stays in weekend nights</th>\n",
       "      <th>stays in week nights</th>\n",
       "      <th>adults</th>\n",
       "      <th>children</th>\n",
       "      <th>babies</th>\n",
       "      <th>previous cancellations</th>\n",
       "      <th>previous bookings not canceled</th>\n",
       "      <th>booking changes</th>\n",
       "      <th>days in waiting list</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Resort Hotel</td>\n",
       "      <td>0</td>\n",
       "      <td>27</td>\n",
       "      <td>BB</td>\n",
       "      <td>PRT</td>\n",
       "      <td>Direct</td>\n",
       "      <td>Direct</td>\n",
       "      <td>0</td>\n",
       "      <td>C</td>\n",
       "      <td>C</td>\n",
       "      <td>...</td>\n",
       "      <td>2.223407</td>\n",
       "      <td>-0.932429</td>\n",
       "      <td>-1.316808</td>\n",
       "      <td>0.244755</td>\n",
       "      <td>-0.261059</td>\n",
       "      <td>-0.081618</td>\n",
       "      <td>-0.103021</td>\n",
       "      <td>-0.088662</td>\n",
       "      <td>4.256884</td>\n",
       "      <td>-0.132201</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Resort Hotel</td>\n",
       "      <td>0</td>\n",
       "      <td>27</td>\n",
       "      <td>BB</td>\n",
       "      <td>PRT</td>\n",
       "      <td>Direct</td>\n",
       "      <td>Direct</td>\n",
       "      <td>0</td>\n",
       "      <td>C</td>\n",
       "      <td>C</td>\n",
       "      <td>...</td>\n",
       "      <td>5.918350</td>\n",
       "      <td>-0.932429</td>\n",
       "      <td>-1.316808</td>\n",
       "      <td>0.244755</td>\n",
       "      <td>-0.261059</td>\n",
       "      <td>-0.081618</td>\n",
       "      <td>-0.103021</td>\n",
       "      <td>-0.088662</td>\n",
       "      <td>5.788789</td>\n",
       "      <td>-0.132201</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Resort Hotel</td>\n",
       "      <td>0</td>\n",
       "      <td>27</td>\n",
       "      <td>BB</td>\n",
       "      <td>GBR</td>\n",
       "      <td>Direct</td>\n",
       "      <td>Direct</td>\n",
       "      <td>0</td>\n",
       "      <td>A</td>\n",
       "      <td>C</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.910279</td>\n",
       "      <td>-0.932429</td>\n",
       "      <td>-0.790536</td>\n",
       "      <td>-1.483635</td>\n",
       "      <td>-0.261059</td>\n",
       "      <td>-0.081618</td>\n",
       "      <td>-0.103021</td>\n",
       "      <td>-0.088662</td>\n",
       "      <td>-0.338828</td>\n",
       "      <td>-0.132201</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Resort Hotel</td>\n",
       "      <td>0</td>\n",
       "      <td>27</td>\n",
       "      <td>BB</td>\n",
       "      <td>GBR</td>\n",
       "      <td>Corporate</td>\n",
       "      <td>Corporate</td>\n",
       "      <td>0</td>\n",
       "      <td>A</td>\n",
       "      <td>A</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.854153</td>\n",
       "      <td>-0.932429</td>\n",
       "      <td>-0.790536</td>\n",
       "      <td>-1.483635</td>\n",
       "      <td>-0.261059</td>\n",
       "      <td>-0.081618</td>\n",
       "      <td>-0.103021</td>\n",
       "      <td>-0.088662</td>\n",
       "      <td>-0.338828</td>\n",
       "      <td>-0.132201</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Resort Hotel</td>\n",
       "      <td>0</td>\n",
       "      <td>27</td>\n",
       "      <td>BB</td>\n",
       "      <td>GBR</td>\n",
       "      <td>Online TA</td>\n",
       "      <td>TA/TO</td>\n",
       "      <td>0</td>\n",
       "      <td>A</td>\n",
       "      <td>A</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.844799</td>\n",
       "      <td>-0.932429</td>\n",
       "      <td>-0.264264</td>\n",
       "      <td>0.244755</td>\n",
       "      <td>-0.261059</td>\n",
       "      <td>-0.081618</td>\n",
       "      <td>-0.103021</td>\n",
       "      <td>-0.088662</td>\n",
       "      <td>-0.338828</td>\n",
       "      <td>-0.132201</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>118893</th>\n",
       "      <td>City Hotel</td>\n",
       "      <td>0</td>\n",
       "      <td>35</td>\n",
       "      <td>BB</td>\n",
       "      <td>BEL</td>\n",
       "      <td>Offline TA/TO</td>\n",
       "      <td>TA/TO</td>\n",
       "      <td>0</td>\n",
       "      <td>A</td>\n",
       "      <td>A</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.760610</td>\n",
       "      <td>1.075176</td>\n",
       "      <td>1.314550</td>\n",
       "      <td>0.244755</td>\n",
       "      <td>-0.261059</td>\n",
       "      <td>-0.081618</td>\n",
       "      <td>-0.103021</td>\n",
       "      <td>-0.088662</td>\n",
       "      <td>-0.338828</td>\n",
       "      <td>-0.132201</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>118894</th>\n",
       "      <td>City Hotel</td>\n",
       "      <td>0</td>\n",
       "      <td>35</td>\n",
       "      <td>BB</td>\n",
       "      <td>FRA</td>\n",
       "      <td>Online TA</td>\n",
       "      <td>TA/TO</td>\n",
       "      <td>0</td>\n",
       "      <td>E</td>\n",
       "      <td>E</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.021622</td>\n",
       "      <td>1.075176</td>\n",
       "      <td>1.314550</td>\n",
       "      <td>1.973145</td>\n",
       "      <td>-0.261059</td>\n",
       "      <td>-0.081618</td>\n",
       "      <td>-0.103021</td>\n",
       "      <td>-0.088662</td>\n",
       "      <td>-0.338828</td>\n",
       "      <td>-0.132201</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>118895</th>\n",
       "      <td>City Hotel</td>\n",
       "      <td>0</td>\n",
       "      <td>35</td>\n",
       "      <td>BB</td>\n",
       "      <td>DEU</td>\n",
       "      <td>Online TA</td>\n",
       "      <td>TA/TO</td>\n",
       "      <td>0</td>\n",
       "      <td>D</td>\n",
       "      <td>D</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.657713</td>\n",
       "      <td>1.075176</td>\n",
       "      <td>1.314550</td>\n",
       "      <td>0.244755</td>\n",
       "      <td>-0.261059</td>\n",
       "      <td>-0.081618</td>\n",
       "      <td>-0.103021</td>\n",
       "      <td>-0.088662</td>\n",
       "      <td>-0.338828</td>\n",
       "      <td>-0.132201</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>118896</th>\n",
       "      <td>City Hotel</td>\n",
       "      <td>0</td>\n",
       "      <td>35</td>\n",
       "      <td>BB</td>\n",
       "      <td>GBR</td>\n",
       "      <td>Online TA</td>\n",
       "      <td>TA/TO</td>\n",
       "      <td>0</td>\n",
       "      <td>A</td>\n",
       "      <td>A</td>\n",
       "      <td>...</td>\n",
       "      <td>0.043858</td>\n",
       "      <td>1.075176</td>\n",
       "      <td>1.314550</td>\n",
       "      <td>0.244755</td>\n",
       "      <td>-0.261059</td>\n",
       "      <td>-0.081618</td>\n",
       "      <td>-0.103021</td>\n",
       "      <td>-0.088662</td>\n",
       "      <td>-0.338828</td>\n",
       "      <td>-0.132201</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>118897</th>\n",
       "      <td>City Hotel</td>\n",
       "      <td>0</td>\n",
       "      <td>35</td>\n",
       "      <td>HB</td>\n",
       "      <td>DEU</td>\n",
       "      <td>Online TA</td>\n",
       "      <td>TA/TO</td>\n",
       "      <td>0</td>\n",
       "      <td>A</td>\n",
       "      <td>A</td>\n",
       "      <td>...</td>\n",
       "      <td>0.941870</td>\n",
       "      <td>1.075176</td>\n",
       "      <td>2.367093</td>\n",
       "      <td>0.244755</td>\n",
       "      <td>-0.261059</td>\n",
       "      <td>-0.081618</td>\n",
       "      <td>-0.103021</td>\n",
       "      <td>-0.088662</td>\n",
       "      <td>-0.338828</td>\n",
       "      <td>-0.132201</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>118898 rows × 30 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "               hotel  is_canceled  arrival_date_week_number meal country  \\\n",
       "0       Resort Hotel            0                        27   BB     PRT   \n",
       "1       Resort Hotel            0                        27   BB     PRT   \n",
       "2       Resort Hotel            0                        27   BB     GBR   \n",
       "3       Resort Hotel            0                        27   BB     GBR   \n",
       "4       Resort Hotel            0                        27   BB     GBR   \n",
       "...              ...          ...                       ...  ...     ...   \n",
       "118893    City Hotel            0                        35   BB     BEL   \n",
       "118894    City Hotel            0                        35   BB     FRA   \n",
       "118895    City Hotel            0                        35   BB     DEU   \n",
       "118896    City Hotel            0                        35   BB     GBR   \n",
       "118897    City Hotel            0                        35   HB     DEU   \n",
       "\n",
       "       market_segment distribution_channel  is_repeated_guest  \\\n",
       "0              Direct               Direct                  0   \n",
       "1              Direct               Direct                  0   \n",
       "2              Direct               Direct                  0   \n",
       "3           Corporate            Corporate                  0   \n",
       "4           Online TA                TA/TO                  0   \n",
       "...               ...                  ...                ...   \n",
       "118893  Offline TA/TO                TA/TO                  0   \n",
       "118894      Online TA                TA/TO                  0   \n",
       "118895      Online TA                TA/TO                  0   \n",
       "118896      Online TA                TA/TO                  0   \n",
       "118897      Online TA                TA/TO                  0   \n",
       "\n",
       "       reserved_room_type assigned_room_type  ... lead time  \\\n",
       "0                       C                  C  ...  2.223407   \n",
       "1                       C                  C  ...  5.918350   \n",
       "2                       A                  C  ... -0.910279   \n",
       "3                       A                  A  ... -0.854153   \n",
       "4                       A                  A  ... -0.844799   \n",
       "...                   ...                ...  ...       ...   \n",
       "118893                  A                  A  ... -0.760610   \n",
       "118894                  E                  E  ... -0.021622   \n",
       "118895                  D                  D  ... -0.657713   \n",
       "118896                  A                  A  ...  0.043858   \n",
       "118897                  A                  A  ...  0.941870   \n",
       "\n",
       "        stays in weekend nights  stays in week nights   adults   children   \\\n",
       "0                     -0.932429             -1.316808  0.244755  -0.261059   \n",
       "1                     -0.932429             -1.316808  0.244755  -0.261059   \n",
       "2                     -0.932429             -0.790536 -1.483635  -0.261059   \n",
       "3                     -0.932429             -0.790536 -1.483635  -0.261059   \n",
       "4                     -0.932429             -0.264264  0.244755  -0.261059   \n",
       "...                         ...                   ...       ...        ...   \n",
       "118893                 1.075176              1.314550  0.244755  -0.261059   \n",
       "118894                 1.075176              1.314550  1.973145  -0.261059   \n",
       "118895                 1.075176              1.314550  0.244755  -0.261059   \n",
       "118896                 1.075176              1.314550  0.244755  -0.261059   \n",
       "118897                 1.075176              2.367093  0.244755  -0.261059   \n",
       "\n",
       "         babies   previous cancellations previous bookings not canceled  \\\n",
       "0      -0.081618               -0.103021                      -0.088662   \n",
       "1      -0.081618               -0.103021                      -0.088662   \n",
       "2      -0.081618               -0.103021                      -0.088662   \n",
       "3      -0.081618               -0.103021                      -0.088662   \n",
       "4      -0.081618               -0.103021                      -0.088662   \n",
       "...          ...                     ...                            ...   \n",
       "118893 -0.081618               -0.103021                      -0.088662   \n",
       "118894 -0.081618               -0.103021                      -0.088662   \n",
       "118895 -0.081618               -0.103021                      -0.088662   \n",
       "118896 -0.081618               -0.103021                      -0.088662   \n",
       "118897 -0.081618               -0.103021                      -0.088662   \n",
       "\n",
       "       booking changes days in waiting list  \n",
       "0             4.256884            -0.132201  \n",
       "1             5.788789            -0.132201  \n",
       "2            -0.338828            -0.132201  \n",
       "3            -0.338828            -0.132201  \n",
       "4            -0.338828            -0.132201  \n",
       "...                ...                  ...  \n",
       "118893       -0.338828            -0.132201  \n",
       "118894       -0.338828            -0.132201  \n",
       "118895       -0.338828            -0.132201  \n",
       "118896       -0.338828            -0.132201  \n",
       "118897       -0.338828            -0.132201  \n",
       "\n",
       "[118898 rows x 30 columns]"
      ]
     },
     "execution_count": 119,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "\n",
    "df3 = pd.concat([data, scaled_df], axis=1)\n",
    "df3.drop(col_names , axis = 1, inplace = True)\n",
    "df3"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 120,
   "metadata": {
    "id": "ep9U4MqnEGBt",
    "outputId": "8b4ed076-3d49-425e-dbfe-138fadba4d55"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>hotel</th>\n",
       "      <th>is_canceled</th>\n",
       "      <th>arrival_date_week_number</th>\n",
       "      <th>meal</th>\n",
       "      <th>country</th>\n",
       "      <th>market_segment</th>\n",
       "      <th>distribution_channel</th>\n",
       "      <th>is_repeated_guest</th>\n",
       "      <th>reserved_room_type</th>\n",
       "      <th>assigned_room_type</th>\n",
       "      <th>...</th>\n",
       "      <th>lead time</th>\n",
       "      <th>stays in weekend nights</th>\n",
       "      <th>stays in week nights</th>\n",
       "      <th>adults</th>\n",
       "      <th>children</th>\n",
       "      <th>babies</th>\n",
       "      <th>previous cancellations</th>\n",
       "      <th>previous bookings not canceled</th>\n",
       "      <th>booking changes</th>\n",
       "      <th>days in waiting list</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Resort Hotel</td>\n",
       "      <td>0</td>\n",
       "      <td>27</td>\n",
       "      <td>BB</td>\n",
       "      <td>PRT</td>\n",
       "      <td>Direct</td>\n",
       "      <td>Direct</td>\n",
       "      <td>0</td>\n",
       "      <td>C</td>\n",
       "      <td>C</td>\n",
       "      <td>...</td>\n",
       "      <td>2.223407</td>\n",
       "      <td>-0.932429</td>\n",
       "      <td>-1.316808</td>\n",
       "      <td>0.244755</td>\n",
       "      <td>-0.261059</td>\n",
       "      <td>-0.081618</td>\n",
       "      <td>-0.103021</td>\n",
       "      <td>-0.088662</td>\n",
       "      <td>4.256884</td>\n",
       "      <td>-0.132201</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Resort Hotel</td>\n",
       "      <td>0</td>\n",
       "      <td>27</td>\n",
       "      <td>BB</td>\n",
       "      <td>PRT</td>\n",
       "      <td>Direct</td>\n",
       "      <td>Direct</td>\n",
       "      <td>0</td>\n",
       "      <td>C</td>\n",
       "      <td>C</td>\n",
       "      <td>...</td>\n",
       "      <td>5.918350</td>\n",
       "      <td>-0.932429</td>\n",
       "      <td>-1.316808</td>\n",
       "      <td>0.244755</td>\n",
       "      <td>-0.261059</td>\n",
       "      <td>-0.081618</td>\n",
       "      <td>-0.103021</td>\n",
       "      <td>-0.088662</td>\n",
       "      <td>5.788789</td>\n",
       "      <td>-0.132201</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Resort Hotel</td>\n",
       "      <td>0</td>\n",
       "      <td>27</td>\n",
       "      <td>BB</td>\n",
       "      <td>GBR</td>\n",
       "      <td>Direct</td>\n",
       "      <td>Direct</td>\n",
       "      <td>0</td>\n",
       "      <td>A</td>\n",
       "      <td>C</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.910279</td>\n",
       "      <td>-0.932429</td>\n",
       "      <td>-0.790536</td>\n",
       "      <td>-1.483635</td>\n",
       "      <td>-0.261059</td>\n",
       "      <td>-0.081618</td>\n",
       "      <td>-0.103021</td>\n",
       "      <td>-0.088662</td>\n",
       "      <td>-0.338828</td>\n",
       "      <td>-0.132201</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Resort Hotel</td>\n",
       "      <td>0</td>\n",
       "      <td>27</td>\n",
       "      <td>BB</td>\n",
       "      <td>GBR</td>\n",
       "      <td>Corporate</td>\n",
       "      <td>Corporate</td>\n",
       "      <td>0</td>\n",
       "      <td>A</td>\n",
       "      <td>A</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.854153</td>\n",
       "      <td>-0.932429</td>\n",
       "      <td>-0.790536</td>\n",
       "      <td>-1.483635</td>\n",
       "      <td>-0.261059</td>\n",
       "      <td>-0.081618</td>\n",
       "      <td>-0.103021</td>\n",
       "      <td>-0.088662</td>\n",
       "      <td>-0.338828</td>\n",
       "      <td>-0.132201</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Resort Hotel</td>\n",
       "      <td>0</td>\n",
       "      <td>27</td>\n",
       "      <td>BB</td>\n",
       "      <td>GBR</td>\n",
       "      <td>Online TA</td>\n",
       "      <td>TA/TO</td>\n",
       "      <td>0</td>\n",
       "      <td>A</td>\n",
       "      <td>A</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.844799</td>\n",
       "      <td>-0.932429</td>\n",
       "      <td>-0.264264</td>\n",
       "      <td>0.244755</td>\n",
       "      <td>-0.261059</td>\n",
       "      <td>-0.081618</td>\n",
       "      <td>-0.103021</td>\n",
       "      <td>-0.088662</td>\n",
       "      <td>-0.338828</td>\n",
       "      <td>-0.132201</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>118893</th>\n",
       "      <td>City Hotel</td>\n",
       "      <td>0</td>\n",
       "      <td>35</td>\n",
       "      <td>BB</td>\n",
       "      <td>BEL</td>\n",
       "      <td>Offline TA/TO</td>\n",
       "      <td>TA/TO</td>\n",
       "      <td>0</td>\n",
       "      <td>A</td>\n",
       "      <td>A</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.760610</td>\n",
       "      <td>1.075176</td>\n",
       "      <td>1.314550</td>\n",
       "      <td>0.244755</td>\n",
       "      <td>-0.261059</td>\n",
       "      <td>-0.081618</td>\n",
       "      <td>-0.103021</td>\n",
       "      <td>-0.088662</td>\n",
       "      <td>-0.338828</td>\n",
       "      <td>-0.132201</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>118894</th>\n",
       "      <td>City Hotel</td>\n",
       "      <td>0</td>\n",
       "      <td>35</td>\n",
       "      <td>BB</td>\n",
       "      <td>FRA</td>\n",
       "      <td>Online TA</td>\n",
       "      <td>TA/TO</td>\n",
       "      <td>0</td>\n",
       "      <td>E</td>\n",
       "      <td>E</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.021622</td>\n",
       "      <td>1.075176</td>\n",
       "      <td>1.314550</td>\n",
       "      <td>1.973145</td>\n",
       "      <td>-0.261059</td>\n",
       "      <td>-0.081618</td>\n",
       "      <td>-0.103021</td>\n",
       "      <td>-0.088662</td>\n",
       "      <td>-0.338828</td>\n",
       "      <td>-0.132201</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>118895</th>\n",
       "      <td>City Hotel</td>\n",
       "      <td>0</td>\n",
       "      <td>35</td>\n",
       "      <td>BB</td>\n",
       "      <td>DEU</td>\n",
       "      <td>Online TA</td>\n",
       "      <td>TA/TO</td>\n",
       "      <td>0</td>\n",
       "      <td>D</td>\n",
       "      <td>D</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.657713</td>\n",
       "      <td>1.075176</td>\n",
       "      <td>1.314550</td>\n",
       "      <td>0.244755</td>\n",
       "      <td>-0.261059</td>\n",
       "      <td>-0.081618</td>\n",
       "      <td>-0.103021</td>\n",
       "      <td>-0.088662</td>\n",
       "      <td>-0.338828</td>\n",
       "      <td>-0.132201</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>118896</th>\n",
       "      <td>City Hotel</td>\n",
       "      <td>0</td>\n",
       "      <td>35</td>\n",
       "      <td>BB</td>\n",
       "      <td>GBR</td>\n",
       "      <td>Online TA</td>\n",
       "      <td>TA/TO</td>\n",
       "      <td>0</td>\n",
       "      <td>A</td>\n",
       "      <td>A</td>\n",
       "      <td>...</td>\n",
       "      <td>0.043858</td>\n",
       "      <td>1.075176</td>\n",
       "      <td>1.314550</td>\n",
       "      <td>0.244755</td>\n",
       "      <td>-0.261059</td>\n",
       "      <td>-0.081618</td>\n",
       "      <td>-0.103021</td>\n",
       "      <td>-0.088662</td>\n",
       "      <td>-0.338828</td>\n",
       "      <td>-0.132201</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>118897</th>\n",
       "      <td>City Hotel</td>\n",
       "      <td>0</td>\n",
       "      <td>35</td>\n",
       "      <td>HB</td>\n",
       "      <td>DEU</td>\n",
       "      <td>Online TA</td>\n",
       "      <td>TA/TO</td>\n",
       "      <td>0</td>\n",
       "      <td>A</td>\n",
       "      <td>A</td>\n",
       "      <td>...</td>\n",
       "      <td>0.941870</td>\n",
       "      <td>1.075176</td>\n",
       "      <td>2.367093</td>\n",
       "      <td>0.244755</td>\n",
       "      <td>-0.261059</td>\n",
       "      <td>-0.081618</td>\n",
       "      <td>-0.103021</td>\n",
       "      <td>-0.088662</td>\n",
       "      <td>-0.338828</td>\n",
       "      <td>-0.132201</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>118898 rows × 30 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "               hotel  is_canceled  arrival_date_week_number meal country  \\\n",
       "0       Resort Hotel            0                        27   BB     PRT   \n",
       "1       Resort Hotel            0                        27   BB     PRT   \n",
       "2       Resort Hotel            0                        27   BB     GBR   \n",
       "3       Resort Hotel            0                        27   BB     GBR   \n",
       "4       Resort Hotel            0                        27   BB     GBR   \n",
       "...              ...          ...                       ...  ...     ...   \n",
       "118893    City Hotel            0                        35   BB     BEL   \n",
       "118894    City Hotel            0                        35   BB     FRA   \n",
       "118895    City Hotel            0                        35   BB     DEU   \n",
       "118896    City Hotel            0                        35   BB     GBR   \n",
       "118897    City Hotel            0                        35   HB     DEU   \n",
       "\n",
       "       market_segment distribution_channel  is_repeated_guest  \\\n",
       "0              Direct               Direct                  0   \n",
       "1              Direct               Direct                  0   \n",
       "2              Direct               Direct                  0   \n",
       "3           Corporate            Corporate                  0   \n",
       "4           Online TA                TA/TO                  0   \n",
       "...               ...                  ...                ...   \n",
       "118893  Offline TA/TO                TA/TO                  0   \n",
       "118894      Online TA                TA/TO                  0   \n",
       "118895      Online TA                TA/TO                  0   \n",
       "118896      Online TA                TA/TO                  0   \n",
       "118897      Online TA                TA/TO                  0   \n",
       "\n",
       "       reserved_room_type assigned_room_type  ... lead time  \\\n",
       "0                       C                  C  ...  2.223407   \n",
       "1                       C                  C  ...  5.918350   \n",
       "2                       A                  C  ... -0.910279   \n",
       "3                       A                  A  ... -0.854153   \n",
       "4                       A                  A  ... -0.844799   \n",
       "...                   ...                ...  ...       ...   \n",
       "118893                  A                  A  ... -0.760610   \n",
       "118894                  E                  E  ... -0.021622   \n",
       "118895                  D                  D  ... -0.657713   \n",
       "118896                  A                  A  ...  0.043858   \n",
       "118897                  A                  A  ...  0.941870   \n",
       "\n",
       "        stays in weekend nights  stays in week nights   adults   children   \\\n",
       "0                     -0.932429             -1.316808  0.244755  -0.261059   \n",
       "1                     -0.932429             -1.316808  0.244755  -0.261059   \n",
       "2                     -0.932429             -0.790536 -1.483635  -0.261059   \n",
       "3                     -0.932429             -0.790536 -1.483635  -0.261059   \n",
       "4                     -0.932429             -0.264264  0.244755  -0.261059   \n",
       "...                         ...                   ...       ...        ...   \n",
       "118893                 1.075176              1.314550  0.244755  -0.261059   \n",
       "118894                 1.075176              1.314550  1.973145  -0.261059   \n",
       "118895                 1.075176              1.314550  0.244755  -0.261059   \n",
       "118896                 1.075176              1.314550  0.244755  -0.261059   \n",
       "118897                 1.075176              2.367093  0.244755  -0.261059   \n",
       "\n",
       "         babies   previous cancellations previous bookings not canceled  \\\n",
       "0      -0.081618               -0.103021                      -0.088662   \n",
       "1      -0.081618               -0.103021                      -0.088662   \n",
       "2      -0.081618               -0.103021                      -0.088662   \n",
       "3      -0.081618               -0.103021                      -0.088662   \n",
       "4      -0.081618               -0.103021                      -0.088662   \n",
       "...          ...                     ...                            ...   \n",
       "118893 -0.081618               -0.103021                      -0.088662   \n",
       "118894 -0.081618               -0.103021                      -0.088662   \n",
       "118895 -0.081618               -0.103021                      -0.088662   \n",
       "118896 -0.081618               -0.103021                      -0.088662   \n",
       "118897 -0.081618               -0.103021                      -0.088662   \n",
       "\n",
       "       booking changes days in waiting list  \n",
       "0             4.256884            -0.132201  \n",
       "1             5.788789            -0.132201  \n",
       "2            -0.338828            -0.132201  \n",
       "3            -0.338828            -0.132201  \n",
       "4            -0.338828            -0.132201  \n",
       "...                ...                  ...  \n",
       "118893       -0.338828            -0.132201  \n",
       "118894       -0.338828            -0.132201  \n",
       "118895       -0.338828            -0.132201  \n",
       "118896       -0.338828            -0.132201  \n",
       "118897       -0.338828            -0.132201  \n",
       "\n",
       "[118898 rows x 30 columns]"
      ]
     },
     "execution_count": 120,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dataset = df3.copy()\n",
    "dataset"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "9vzKI_FvEGBu"
   },
   "source": [
    "## Explanatory Data Analysis"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "MwJFnsYtEGBu"
   },
   "source": [
    "##  \n",
    "- Dans ce qui suit nous allons concidere la variabe is_cancelled notre variable target "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "e72vEI4rEGBu"
   },
   "source": [
    "\n",
    "- Desctiptive statistics for **datetime variables** "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 121,
   "metadata": {
    "id": "wTEFNs1HEGBv",
    "outputId": "d765990a-0381-4e44-ad15-b0442e00fb19"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "count                           118898\n",
       "mean     2016-08-29 02:40:04.440783360\n",
       "min                2015-07-01 00:00:00\n",
       "25%                2016-03-14 00:00:00\n",
       "50%                2016-09-07 00:00:00\n",
       "75%                2017-03-19 00:00:00\n",
       "max                2017-08-31 00:00:00\n",
       "std                                NaN\n",
       "Name: arrival_date, dtype: object"
      ]
     },
     "execution_count": 121,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dataset.describe(datetime_is_numeric=True)['arrival_date']"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "SzjKJd7CEGBv"
   },
   "source": [
    "##   \n",
    "- Desctiptive statistics for **Categorical variables** "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 122,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 165
    },
    "id": "P9geBLAxEGBw",
    "outputId": "587e0044-41c8-4722-ed5b-dd5c40ec38d2"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>hotel</th>\n",
       "      <th>meal</th>\n",
       "      <th>country</th>\n",
       "      <th>market_segment</th>\n",
       "      <th>distribution_channel</th>\n",
       "      <th>reserved_room_type</th>\n",
       "      <th>assigned_room_type</th>\n",
       "      <th>deposit_type</th>\n",
       "      <th>customer_type</th>\n",
       "      <th>reservation_status</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>118898</td>\n",
       "      <td>118898</td>\n",
       "      <td>118898</td>\n",
       "      <td>118898</td>\n",
       "      <td>118898</td>\n",
       "      <td>118898</td>\n",
       "      <td>118898</td>\n",
       "      <td>118898</td>\n",
       "      <td>118898</td>\n",
       "      <td>118898</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>unique</th>\n",
       "      <td>2</td>\n",
       "      <td>5</td>\n",
       "      <td>177</td>\n",
       "      <td>7</td>\n",
       "      <td>5</td>\n",
       "      <td>10</td>\n",
       "      <td>12</td>\n",
       "      <td>3</td>\n",
       "      <td>4</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>top</th>\n",
       "      <td>City Hotel</td>\n",
       "      <td>BB</td>\n",
       "      <td>PRT</td>\n",
       "      <td>Online TA</td>\n",
       "      <td>TA/TO</td>\n",
       "      <td>A</td>\n",
       "      <td>A</td>\n",
       "      <td>No Deposit</td>\n",
       "      <td>Transient</td>\n",
       "      <td>Check-Out</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>freq</th>\n",
       "      <td>79302</td>\n",
       "      <td>91863</td>\n",
       "      <td>48586</td>\n",
       "      <td>56402</td>\n",
       "      <td>97730</td>\n",
       "      <td>85601</td>\n",
       "      <td>73863</td>\n",
       "      <td>104163</td>\n",
       "      <td>89174</td>\n",
       "      <td>74745</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "             hotel    meal country market_segment distribution_channel  \\\n",
       "count       118898  118898  118898         118898               118898   \n",
       "unique           2       5     177              7                    5   \n",
       "top     City Hotel      BB     PRT      Online TA                TA/TO   \n",
       "freq         79302   91863   48586          56402                97730   \n",
       "\n",
       "       reserved_room_type assigned_room_type deposit_type customer_type  \\\n",
       "count              118898             118898       118898        118898   \n",
       "unique                 10                 12            3             4   \n",
       "top                     A                  A   No Deposit     Transient   \n",
       "freq                85601              73863       104163         89174   \n",
       "\n",
       "       reservation_status  \n",
       "count              118898  \n",
       "unique                  3  \n",
       "top             Check-Out  \n",
       "freq                74745  "
      ]
     },
     "execution_count": 122,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dataset.describe(include=['object'])"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "zCpr_3bhEGBw"
   },
   "source": [
    "voyons la relations  des categories de chaques variable avec notre variable dependante `is_canceled`\n",
    "cette etape va nous donnee une vue generale sur les variables categorique qui seront utile pour notre model, par la suite nous allons effectuer des test pour selectionner parmis ces variables celles qui sont plus importante"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 123,
   "metadata": {
    "id": "ocX5s0a4EGBx"
   },
   "outputs": [],
   "source": [
    "def cancel(columnname) : \n",
    "    cancellation=dataset[dataset['is_canceled'] == 1].groupby(dataset[columnname])['is_canceled'].count()\n",
    "    df=cancellation.to_frame()\n",
    "    df.reset_index(level=0, inplace=True)\n",
    "    plt.rcParams[\"figure.figsize\"] = (10,10)\n",
    "    return (plt.bar(df[columnname], df['is_canceled'], color ='maroon',width = 0.5))\n",
    "def notcancel(columnname) : \n",
    "    cancellation=dataset[dataset['is_canceled'] == 0].groupby(dataset[columnname])['is_canceled'].count()\n",
    "    df1=cancellation.to_frame()\n",
    "    df1.reset_index(level=0, inplace=True)\n",
    "    plt.rcParams[\"figure.figsize\"] = (10,10)\n",
    "    return (plt.bar(df[columnname], df['is_canceled'], color ='blue',width = 0.5))\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 124,
   "metadata": {
    "id": "R2Waa835EGBx"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<BarContainer object of 4 artists>"
      ]
     },
     "execution_count": 124,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 720x720 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "cancel('customer_type')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 125,
   "metadata": {
    "id": "aJd3XrFcEGBy"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<BarContainer object of 12 artists>"
      ]
     },
     "execution_count": 125,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x720 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "cancel('assigned_room_type')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 126,
   "metadata": {
    "id": "3HbavyPjEGBy"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<BarContainer object of 7 artists>"
      ]
     },
     "execution_count": 126,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x720 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "cancel('market_segment')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 127,
   "metadata": {
    "id": "jSaeZ7f6EGBy"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<BarContainer object of 3 artists>"
      ]
     },
     "execution_count": 127,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 720x720 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "cancel('deposit_type')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 128,
   "metadata": {
    "id": "FNuBRO0dEGBz"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<BarContainer object of 4 artists>"
      ]
     },
     "execution_count": 128,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x720 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "cancel('distribution_channel')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 129,
   "metadata": {
    "id": "mRFhaS7xEGBz"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<BarContainer object of 2 artists>"
      ]
     },
     "execution_count": 129,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x720 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "cancel('reservation_status')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "Fje0L5WYEGBz"
   },
   "source": [
    "- comme on peut remarquer, il existe des categorie qui ont plus tendance a annuler la reservations, mais nous ne pouvons pas seulement conclure cela de ces graphes, puisque la frequence des  categories dans une seulle colonne varie.  \n",
    "- c'est pour cela que nous devons faire des test pratique qui vont nous reveler le degre d'influence  de chaque  variables  sur la variable `is_canceled` "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "_-1ALMoLEGB0"
   },
   "source": [
    "###  Chi-square test "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 130,
   "metadata": {
    "id": "2Jsx8sXREGB0"
   },
   "outputs": [],
   "source": [
    "from scipy.stats import chi2_contingency"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 131,
   "metadata": {
    "id": "_x6BcRQZEGB0"
   },
   "outputs": [],
   "source": [
    "\n",
    "dataset['Cancelation'] = dataset['is_canceled'].replace({ 1 : 'Canceled', \n",
    "                                      0 : 'NotCanceled'})\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "11KAZSLOEGB0"
   },
   "source": [
    "La meilleure facon pour avoir un aperçu pour nos variables categorique est leur vizualisation en utilisant **Heatmaps**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 132,
   "metadata": {
    "id": "ODZe3Pu-EGB1"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:xlabel='deposit_type', ylabel='Cancelation'>"
      ]
     },
     "execution_count": 132,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 864x576 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "contigency= pd.crosstab(dataset['Cancelation'], dataset['deposit_type'])\n",
    "plt.figure(figsize=(12,8))\n",
    "sns.heatmap(contigency, annot=True, cmap=\"YlGnBu\") "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 133,
   "metadata": {
    "id": "gTDU7EWCEGB1"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[0.0, 1.3461925413085133e-64, 0.0, 0.0, 0.0, 1.3632533718287424e-131, 0.0, 0.0, 0.0, 0.0]\n"
     ]
    }
   ],
   "source": [
    "features = ['hotel','meal','country','market_segment','distribution_channel','reserved_room_type','assigned_room_type',\n",
    "            'deposit_type','customer_type','reservation_status']\n",
    "p_list = []\n",
    "for i in range(0,10):\n",
    "    contigency= pd.crosstab(dataset['Cancelation'], dataset[features[i]])\n",
    "    c, p, dof, expected = chi2_contingency(contigency)\n",
    "    p_list.append(p)\n",
    "print(p_list)\n",
    "    "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "KsMVQ3uJEGB1"
   },
   "source": [
    "#### \n",
    "### Puisque toute les p-value sont presque nul, cela montre que toutes les features sont statiquement signifiant pour note variable independante. Cependant, il y a surement des feature qui sont plus important que d'autre.\n",
    "\n",
    "- Dans ce qui suit nous allons selectionner les meilleures variables (sois 7 meilleure variables par exemple) parmis ces 10 variables ![image.png](attachment:image.png)\n",
    "\n",
    "#### "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 134,
   "metadata": {
    "id": "JQv3RBuxEGB1"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>hotel</th>\n",
       "      <th>meal</th>\n",
       "      <th>country</th>\n",
       "      <th>market_segment</th>\n",
       "      <th>distribution_channel</th>\n",
       "      <th>reserved_room_type</th>\n",
       "      <th>assigned_room_type</th>\n",
       "      <th>deposit_type</th>\n",
       "      <th>customer_type</th>\n",
       "      <th>reservation_status</th>\n",
       "      <th>Cancelation</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Resort Hotel</td>\n",
       "      <td>BB</td>\n",
       "      <td>PRT</td>\n",
       "      <td>Direct</td>\n",
       "      <td>Direct</td>\n",
       "      <td>C</td>\n",
       "      <td>C</td>\n",
       "      <td>No Deposit</td>\n",
       "      <td>Transient</td>\n",
       "      <td>Check-Out</td>\n",
       "      <td>NotCanceled</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Resort Hotel</td>\n",
       "      <td>BB</td>\n",
       "      <td>PRT</td>\n",
       "      <td>Direct</td>\n",
       "      <td>Direct</td>\n",
       "      <td>C</td>\n",
       "      <td>C</td>\n",
       "      <td>No Deposit</td>\n",
       "      <td>Transient</td>\n",
       "      <td>Check-Out</td>\n",
       "      <td>NotCanceled</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Resort Hotel</td>\n",
       "      <td>BB</td>\n",
       "      <td>GBR</td>\n",
       "      <td>Direct</td>\n",
       "      <td>Direct</td>\n",
       "      <td>A</td>\n",
       "      <td>C</td>\n",
       "      <td>No Deposit</td>\n",
       "      <td>Transient</td>\n",
       "      <td>Check-Out</td>\n",
       "      <td>NotCanceled</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Resort Hotel</td>\n",
       "      <td>BB</td>\n",
       "      <td>GBR</td>\n",
       "      <td>Corporate</td>\n",
       "      <td>Corporate</td>\n",
       "      <td>A</td>\n",
       "      <td>A</td>\n",
       "      <td>No Deposit</td>\n",
       "      <td>Transient</td>\n",
       "      <td>Check-Out</td>\n",
       "      <td>NotCanceled</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Resort Hotel</td>\n",
       "      <td>BB</td>\n",
       "      <td>GBR</td>\n",
       "      <td>Online TA</td>\n",
       "      <td>TA/TO</td>\n",
       "      <td>A</td>\n",
       "      <td>A</td>\n",
       "      <td>No Deposit</td>\n",
       "      <td>Transient</td>\n",
       "      <td>Check-Out</td>\n",
       "      <td>NotCanceled</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>118893</th>\n",
       "      <td>City Hotel</td>\n",
       "      <td>BB</td>\n",
       "      <td>BEL</td>\n",
       "      <td>Offline TA/TO</td>\n",
       "      <td>TA/TO</td>\n",
       "      <td>A</td>\n",
       "      <td>A</td>\n",
       "      <td>No Deposit</td>\n",
       "      <td>Transient</td>\n",
       "      <td>Check-Out</td>\n",
       "      <td>NotCanceled</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>118894</th>\n",
       "      <td>City Hotel</td>\n",
       "      <td>BB</td>\n",
       "      <td>FRA</td>\n",
       "      <td>Online TA</td>\n",
       "      <td>TA/TO</td>\n",
       "      <td>E</td>\n",
       "      <td>E</td>\n",
       "      <td>No Deposit</td>\n",
       "      <td>Transient</td>\n",
       "      <td>Check-Out</td>\n",
       "      <td>NotCanceled</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>118895</th>\n",
       "      <td>City Hotel</td>\n",
       "      <td>BB</td>\n",
       "      <td>DEU</td>\n",
       "      <td>Online TA</td>\n",
       "      <td>TA/TO</td>\n",
       "      <td>D</td>\n",
       "      <td>D</td>\n",
       "      <td>No Deposit</td>\n",
       "      <td>Transient</td>\n",
       "      <td>Check-Out</td>\n",
       "      <td>NotCanceled</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>118896</th>\n",
       "      <td>City Hotel</td>\n",
       "      <td>BB</td>\n",
       "      <td>GBR</td>\n",
       "      <td>Online TA</td>\n",
       "      <td>TA/TO</td>\n",
       "      <td>A</td>\n",
       "      <td>A</td>\n",
       "      <td>No Deposit</td>\n",
       "      <td>Transient</td>\n",
       "      <td>Check-Out</td>\n",
       "      <td>NotCanceled</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>118897</th>\n",
       "      <td>City Hotel</td>\n",
       "      <td>HB</td>\n",
       "      <td>DEU</td>\n",
       "      <td>Online TA</td>\n",
       "      <td>TA/TO</td>\n",
       "      <td>A</td>\n",
       "      <td>A</td>\n",
       "      <td>No Deposit</td>\n",
       "      <td>Transient</td>\n",
       "      <td>Check-Out</td>\n",
       "      <td>NotCanceled</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>118898 rows × 11 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "               hotel meal country market_segment distribution_channel  \\\n",
       "0       Resort Hotel   BB     PRT         Direct               Direct   \n",
       "1       Resort Hotel   BB     PRT         Direct               Direct   \n",
       "2       Resort Hotel   BB     GBR         Direct               Direct   \n",
       "3       Resort Hotel   BB     GBR      Corporate            Corporate   \n",
       "4       Resort Hotel   BB     GBR      Online TA                TA/TO   \n",
       "...              ...  ...     ...            ...                  ...   \n",
       "118893    City Hotel   BB     BEL  Offline TA/TO                TA/TO   \n",
       "118894    City Hotel   BB     FRA      Online TA                TA/TO   \n",
       "118895    City Hotel   BB     DEU      Online TA                TA/TO   \n",
       "118896    City Hotel   BB     GBR      Online TA                TA/TO   \n",
       "118897    City Hotel   HB     DEU      Online TA                TA/TO   \n",
       "\n",
       "       reserved_room_type assigned_room_type deposit_type customer_type  \\\n",
       "0                       C                  C   No Deposit     Transient   \n",
       "1                       C                  C   No Deposit     Transient   \n",
       "2                       A                  C   No Deposit     Transient   \n",
       "3                       A                  A   No Deposit     Transient   \n",
       "4                       A                  A   No Deposit     Transient   \n",
       "...                   ...                ...          ...           ...   \n",
       "118893                  A                  A   No Deposit     Transient   \n",
       "118894                  E                  E   No Deposit     Transient   \n",
       "118895                  D                  D   No Deposit     Transient   \n",
       "118896                  A                  A   No Deposit     Transient   \n",
       "118897                  A                  A   No Deposit     Transient   \n",
       "\n",
       "       reservation_status  Cancelation  \n",
       "0               Check-Out  NotCanceled  \n",
       "1               Check-Out  NotCanceled  \n",
       "2               Check-Out  NotCanceled  \n",
       "3               Check-Out  NotCanceled  \n",
       "4               Check-Out  NotCanceled  \n",
       "...                   ...          ...  \n",
       "118893          Check-Out  NotCanceled  \n",
       "118894          Check-Out  NotCanceled  \n",
       "118895          Check-Out  NotCanceled  \n",
       "118896          Check-Out  NotCanceled  \n",
       "118897          Check-Out  NotCanceled  \n",
       "\n",
       "[118898 rows x 11 columns]"
      ]
     },
     "execution_count": 134,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "encodedDf = dataset[['hotel','meal','country','market_segment','distribution_channel','reserved_room_type',\n",
    "  'assigned_room_type','deposit_type','customer_type','reservation_status','Cancelation']]\n",
    "encodedDf"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 135,
   "metadata": {
    "id": "1gm_mHT2EGB2"
   },
   "outputs": [],
   "source": [
    "from sklearn import preprocessing\n",
    "le = preprocessing.LabelEncoder()\n",
    "for column_name in encodedDf.columns:\n",
    "    if encodedDf[column_name].dtype == object:\n",
    "        encodedDf[column_name] = le.fit_transform(encodedDf[column_name])\n",
    "    else:\n",
    "        pass"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 136,
   "metadata": {
    "id": "2_fkI8P4EGB2"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>hotel</th>\n",
       "      <th>country</th>\n",
       "      <th>distribution_channel</th>\n",
       "      <th>reserved_room_type</th>\n",
       "      <th>assigned_room_type</th>\n",
       "      <th>deposit_type</th>\n",
       "      <th>reservation_status</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>135</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>135</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1</td>\n",
       "      <td>59</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1</td>\n",
       "      <td>59</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1</td>\n",
       "      <td>59</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>118893</th>\n",
       "      <td>0</td>\n",
       "      <td>15</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>118894</th>\n",
       "      <td>0</td>\n",
       "      <td>56</td>\n",
       "      <td>3</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>118895</th>\n",
       "      <td>0</td>\n",
       "      <td>43</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>118896</th>\n",
       "      <td>0</td>\n",
       "      <td>59</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>118897</th>\n",
       "      <td>0</td>\n",
       "      <td>43</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>118898 rows × 7 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "        hotel  country  distribution_channel  reserved_room_type  \\\n",
       "0           1      135                     1                   2   \n",
       "1           1      135                     1                   2   \n",
       "2           1       59                     1                   0   \n",
       "3           1       59                     0                   0   \n",
       "4           1       59                     3                   0   \n",
       "...       ...      ...                   ...                 ...   \n",
       "118893      0       15                     3                   0   \n",
       "118894      0       56                     3                   4   \n",
       "118895      0       43                     3                   3   \n",
       "118896      0       59                     3                   0   \n",
       "118897      0       43                     3                   0   \n",
       "\n",
       "        assigned_room_type  deposit_type  reservation_status  \n",
       "0                        2             0                   1  \n",
       "1                        2             0                   1  \n",
       "2                        2             0                   1  \n",
       "3                        0             0                   1  \n",
       "4                        0             0                   1  \n",
       "...                    ...           ...                 ...  \n",
       "118893                   0             0                   1  \n",
       "118894                   4             0                   1  \n",
       "118895                   3             0                   1  \n",
       "118896                   0             0                   1  \n",
       "118897                   0             0                   1  \n",
       "\n",
       "[118898 rows x 7 columns]"
      ]
     },
     "execution_count": 136,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from sklearn.feature_selection import SelectKBest\n",
    "from sklearn.feature_selection import chi2\n",
    "X = encodedDf[['hotel','meal','country','market_segment','distribution_channel','reserved_room_type','assigned_room_type',\n",
    "               'deposit_type','customer_type','reservation_status']]\n",
    "X = X.astype(str)\n",
    "y = encodedDf[['Cancelation']].astype(str)\n",
    "selector =  SelectKBest(chi2, k=7)\n",
    "X_new = selector.fit_transform(X, y)\n",
    "cols = selector.get_support(indices=True)\n",
    "features_df_cat= encodedDf.iloc[:,cols]\n",
    "features_df_cat"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "Sn9w3AzXEGB2"
   },
   "source": [
    "## Les colonnes si-dessus sont les colonne qui sont les plus statiquement signifiants pour la variable Cancelation "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "ARsIICaLEGB2"
   },
   "source": [
    "- Numerical variables "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 137,
   "metadata": {
    "id": "FCraBRPdEGB3",
    "outputId": "73effded-12ba-4cda-f1b6-8ece971d1eeb"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 118898 entries, 0 to 118897\n",
      "Data columns (total 31 columns):\n",
      " #   Column                          Non-Null Count   Dtype         \n",
      "---  ------                          --------------   -----         \n",
      " 0   hotel                           118898 non-null  object        \n",
      " 1   is_canceled                     118898 non-null  int64         \n",
      " 2   arrival_date_week_number        118898 non-null  int64         \n",
      " 3   meal                            118898 non-null  object        \n",
      " 4   country                         118898 non-null  object        \n",
      " 5   market_segment                  118898 non-null  object        \n",
      " 6   distribution_channel            118898 non-null  object        \n",
      " 7   is_repeated_guest               118898 non-null  int64         \n",
      " 8   reserved_room_type              118898 non-null  object        \n",
      " 9   assigned_room_type              118898 non-null  object        \n",
      " 10  deposit_type                    118898 non-null  object        \n",
      " 11  agent                           102894 non-null  float64       \n",
      " 12  company                         6623 non-null    float64       \n",
      " 13  customer_type                   118898 non-null  object        \n",
      " 14  adr                             118898 non-null  float64       \n",
      " 15  required_car_parking_spaces     118898 non-null  int64         \n",
      " 16  total_of_special_requests       118898 non-null  int64         \n",
      " 17  reservation_status              118898 non-null  object        \n",
      " 18  reservation_status_date         118898 non-null  datetime64[ns]\n",
      " 19  arrival_date                    118898 non-null  datetime64[ns]\n",
      " 20  lead time                       118898 non-null  float64       \n",
      " 21  stays in weekend nights         118898 non-null  float64       \n",
      " 22  stays in week nights            118898 non-null  float64       \n",
      " 23  adults                          118898 non-null  float64       \n",
      " 24  children                        118898 non-null  float64       \n",
      " 25  babies                          118898 non-null  float64       \n",
      " 26  previous cancellations          118898 non-null  float64       \n",
      " 27  previous bookings not canceled  118898 non-null  float64       \n",
      " 28  booking changes                 118898 non-null  float64       \n",
      " 29  days in waiting list            118898 non-null  float64       \n",
      " 30  Cancelation                     118898 non-null  object        \n",
      "dtypes: datetime64[ns](2), float64(13), int64(5), object(11)\n",
      "memory usage: 28.1+ MB\n"
     ]
    }
   ],
   "source": [
    "dataset.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 138,
   "metadata": {
    "id": "gWGrIaivEGB3",
    "outputId": "a86ba472-ac3f-4603-d7fb-328202fb5497"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>is_canceled</th>\n",
       "      <th>arrival_date_week_number</th>\n",
       "      <th>is_repeated_guest</th>\n",
       "      <th>agent</th>\n",
       "      <th>company</th>\n",
       "      <th>adr</th>\n",
       "      <th>required_car_parking_spaces</th>\n",
       "      <th>total_of_special_requests</th>\n",
       "      <th>lead time</th>\n",
       "      <th>stays in weekend nights</th>\n",
       "      <th>stays in week nights</th>\n",
       "      <th>adults</th>\n",
       "      <th>children</th>\n",
       "      <th>babies</th>\n",
       "      <th>previous cancellations</th>\n",
       "      <th>previous bookings not canceled</th>\n",
       "      <th>booking changes</th>\n",
       "      <th>days in waiting list</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>27</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2.223407</td>\n",
       "      <td>-0.932429</td>\n",
       "      <td>-1.316808</td>\n",
       "      <td>0.244755</td>\n",
       "      <td>-0.261059</td>\n",
       "      <td>-0.081618</td>\n",
       "      <td>-0.103021</td>\n",
       "      <td>-0.088662</td>\n",
       "      <td>4.256884</td>\n",
       "      <td>-0.132201</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0</td>\n",
       "      <td>27</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>5.918350</td>\n",
       "      <td>-0.932429</td>\n",
       "      <td>-1.316808</td>\n",
       "      <td>0.244755</td>\n",
       "      <td>-0.261059</td>\n",
       "      <td>-0.081618</td>\n",
       "      <td>-0.103021</td>\n",
       "      <td>-0.088662</td>\n",
       "      <td>5.788789</td>\n",
       "      <td>-0.132201</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0</td>\n",
       "      <td>27</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>75.00</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>-0.910279</td>\n",
       "      <td>-0.932429</td>\n",
       "      <td>-0.790536</td>\n",
       "      <td>-1.483635</td>\n",
       "      <td>-0.261059</td>\n",
       "      <td>-0.081618</td>\n",
       "      <td>-0.103021</td>\n",
       "      <td>-0.088662</td>\n",
       "      <td>-0.338828</td>\n",
       "      <td>-0.132201</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0</td>\n",
       "      <td>27</td>\n",
       "      <td>0</td>\n",
       "      <td>304.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>75.00</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>-0.854153</td>\n",
       "      <td>-0.932429</td>\n",
       "      <td>-0.790536</td>\n",
       "      <td>-1.483635</td>\n",
       "      <td>-0.261059</td>\n",
       "      <td>-0.081618</td>\n",
       "      <td>-0.103021</td>\n",
       "      <td>-0.088662</td>\n",
       "      <td>-0.338828</td>\n",
       "      <td>-0.132201</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0</td>\n",
       "      <td>27</td>\n",
       "      <td>0</td>\n",
       "      <td>240.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>98.00</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>-0.844799</td>\n",
       "      <td>-0.932429</td>\n",
       "      <td>-0.264264</td>\n",
       "      <td>0.244755</td>\n",
       "      <td>-0.261059</td>\n",
       "      <td>-0.081618</td>\n",
       "      <td>-0.103021</td>\n",
       "      <td>-0.088662</td>\n",
       "      <td>-0.338828</td>\n",
       "      <td>-0.132201</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>118893</th>\n",
       "      <td>0</td>\n",
       "      <td>35</td>\n",
       "      <td>0</td>\n",
       "      <td>394.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>96.14</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>-0.760610</td>\n",
       "      <td>1.075176</td>\n",
       "      <td>1.314550</td>\n",
       "      <td>0.244755</td>\n",
       "      <td>-0.261059</td>\n",
       "      <td>-0.081618</td>\n",
       "      <td>-0.103021</td>\n",
       "      <td>-0.088662</td>\n",
       "      <td>-0.338828</td>\n",
       "      <td>-0.132201</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>118894</th>\n",
       "      <td>0</td>\n",
       "      <td>35</td>\n",
       "      <td>0</td>\n",
       "      <td>9.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>225.43</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>-0.021622</td>\n",
       "      <td>1.075176</td>\n",
       "      <td>1.314550</td>\n",
       "      <td>1.973145</td>\n",
       "      <td>-0.261059</td>\n",
       "      <td>-0.081618</td>\n",
       "      <td>-0.103021</td>\n",
       "      <td>-0.088662</td>\n",
       "      <td>-0.338828</td>\n",
       "      <td>-0.132201</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>118895</th>\n",
       "      <td>0</td>\n",
       "      <td>35</td>\n",
       "      <td>0</td>\n",
       "      <td>9.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>157.71</td>\n",
       "      <td>0</td>\n",
       "      <td>4</td>\n",
       "      <td>-0.657713</td>\n",
       "      <td>1.075176</td>\n",
       "      <td>1.314550</td>\n",
       "      <td>0.244755</td>\n",
       "      <td>-0.261059</td>\n",
       "      <td>-0.081618</td>\n",
       "      <td>-0.103021</td>\n",
       "      <td>-0.088662</td>\n",
       "      <td>-0.338828</td>\n",
       "      <td>-0.132201</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>118896</th>\n",
       "      <td>0</td>\n",
       "      <td>35</td>\n",
       "      <td>0</td>\n",
       "      <td>89.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>104.40</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.043858</td>\n",
       "      <td>1.075176</td>\n",
       "      <td>1.314550</td>\n",
       "      <td>0.244755</td>\n",
       "      <td>-0.261059</td>\n",
       "      <td>-0.081618</td>\n",
       "      <td>-0.103021</td>\n",
       "      <td>-0.088662</td>\n",
       "      <td>-0.338828</td>\n",
       "      <td>-0.132201</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>118897</th>\n",
       "      <td>0</td>\n",
       "      <td>35</td>\n",
       "      <td>0</td>\n",
       "      <td>9.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>151.20</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>0.941870</td>\n",
       "      <td>1.075176</td>\n",
       "      <td>2.367093</td>\n",
       "      <td>0.244755</td>\n",
       "      <td>-0.261059</td>\n",
       "      <td>-0.081618</td>\n",
       "      <td>-0.103021</td>\n",
       "      <td>-0.088662</td>\n",
       "      <td>-0.338828</td>\n",
       "      <td>-0.132201</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>118898 rows × 18 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "        is_canceled  arrival_date_week_number  is_repeated_guest  agent  \\\n",
       "0                 0                        27                  0    NaN   \n",
       "1                 0                        27                  0    NaN   \n",
       "2                 0                        27                  0    NaN   \n",
       "3                 0                        27                  0  304.0   \n",
       "4                 0                        27                  0  240.0   \n",
       "...             ...                       ...                ...    ...   \n",
       "118893            0                        35                  0  394.0   \n",
       "118894            0                        35                  0    9.0   \n",
       "118895            0                        35                  0    9.0   \n",
       "118896            0                        35                  0   89.0   \n",
       "118897            0                        35                  0    9.0   \n",
       "\n",
       "        company     adr  required_car_parking_spaces  \\\n",
       "0           NaN    0.00                            0   \n",
       "1           NaN    0.00                            0   \n",
       "2           NaN   75.00                            0   \n",
       "3           NaN   75.00                            0   \n",
       "4           NaN   98.00                            0   \n",
       "...         ...     ...                          ...   \n",
       "118893      NaN   96.14                            0   \n",
       "118894      NaN  225.43                            0   \n",
       "118895      NaN  157.71                            0   \n",
       "118896      NaN  104.40                            0   \n",
       "118897      NaN  151.20                            0   \n",
       "\n",
       "        total_of_special_requests  lead time  stays in weekend nights  \\\n",
       "0                               0   2.223407                -0.932429   \n",
       "1                               0   5.918350                -0.932429   \n",
       "2                               0  -0.910279                -0.932429   \n",
       "3                               0  -0.854153                -0.932429   \n",
       "4                               1  -0.844799                -0.932429   \n",
       "...                           ...        ...                      ...   \n",
       "118893                          0  -0.760610                 1.075176   \n",
       "118894                          2  -0.021622                 1.075176   \n",
       "118895                          4  -0.657713                 1.075176   \n",
       "118896                          0   0.043858                 1.075176   \n",
       "118897                          2   0.941870                 1.075176   \n",
       "\n",
       "        stays in week nights   adults   children    babies   \\\n",
       "0                  -1.316808  0.244755  -0.261059 -0.081618   \n",
       "1                  -1.316808  0.244755  -0.261059 -0.081618   \n",
       "2                  -0.790536 -1.483635  -0.261059 -0.081618   \n",
       "3                  -0.790536 -1.483635  -0.261059 -0.081618   \n",
       "4                  -0.264264  0.244755  -0.261059 -0.081618   \n",
       "...                      ...       ...        ...       ...   \n",
       "118893              1.314550  0.244755  -0.261059 -0.081618   \n",
       "118894              1.314550  1.973145  -0.261059 -0.081618   \n",
       "118895              1.314550  0.244755  -0.261059 -0.081618   \n",
       "118896              1.314550  0.244755  -0.261059 -0.081618   \n",
       "118897              2.367093  0.244755  -0.261059 -0.081618   \n",
       "\n",
       "        previous cancellations  previous bookings not canceled  \\\n",
       "0                    -0.103021                       -0.088662   \n",
       "1                    -0.103021                       -0.088662   \n",
       "2                    -0.103021                       -0.088662   \n",
       "3                    -0.103021                       -0.088662   \n",
       "4                    -0.103021                       -0.088662   \n",
       "...                        ...                             ...   \n",
       "118893               -0.103021                       -0.088662   \n",
       "118894               -0.103021                       -0.088662   \n",
       "118895               -0.103021                       -0.088662   \n",
       "118896               -0.103021                       -0.088662   \n",
       "118897               -0.103021                       -0.088662   \n",
       "\n",
       "        booking changes  days in waiting list  \n",
       "0              4.256884             -0.132201  \n",
       "1              5.788789             -0.132201  \n",
       "2             -0.338828             -0.132201  \n",
       "3             -0.338828             -0.132201  \n",
       "4             -0.338828             -0.132201  \n",
       "...                 ...                   ...  \n",
       "118893        -0.338828             -0.132201  \n",
       "118894        -0.338828             -0.132201  \n",
       "118895        -0.338828             -0.132201  \n",
       "118896        -0.338828             -0.132201  \n",
       "118897        -0.338828             -0.132201  \n",
       "\n",
       "[118898 rows x 18 columns]"
      ]
     },
     "execution_count": 138,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "numerics = ['int16', 'int32', 'int64', 'float16', 'float32', 'float64']\n",
    "\n",
    "numdf = dataset.select_dtypes(include=numerics)\n",
    "numdf"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 139,
   "metadata": {
    "id": "L4J9fKLyEGB3",
    "outputId": "431049f7-cc25-49e3-a752-a0c865822710"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>is_canceled</th>\n",
       "      <th>arrival_date_week_number</th>\n",
       "      <th>is_repeated_guest</th>\n",
       "      <th>agent</th>\n",
       "      <th>company</th>\n",
       "      <th>adr</th>\n",
       "      <th>required_car_parking_spaces</th>\n",
       "      <th>total_of_special_requests</th>\n",
       "      <th>lead time</th>\n",
       "      <th>stays in weekend nights</th>\n",
       "      <th>stays in week nights</th>\n",
       "      <th>adults</th>\n",
       "      <th>children</th>\n",
       "      <th>babies</th>\n",
       "      <th>previous cancellations</th>\n",
       "      <th>previous bookings not canceled</th>\n",
       "      <th>booking changes</th>\n",
       "      <th>days in waiting list</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>is_canceled</th>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.007465</td>\n",
       "      <td>-0.085179</td>\n",
       "      <td>-0.081939</td>\n",
       "      <td>-0.024385</td>\n",
       "      <td>0.046199</td>\n",
       "      <td>-0.194796</td>\n",
       "      <td>-0.235643</td>\n",
       "      <td>0.291994</td>\n",
       "      <td>-0.002631</td>\n",
       "      <td>0.024110</td>\n",
       "      <td>0.058381</td>\n",
       "      <td>0.004751</td>\n",
       "      <td>-0.032521</td>\n",
       "      <td>0.109922</td>\n",
       "      <td>-0.055493</td>\n",
       "      <td>-0.144659</td>\n",
       "      <td>0.054016</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>arrival_date_week_number</th>\n",
       "      <td>0.007465</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>-0.030411</td>\n",
       "      <td>-0.030993</td>\n",
       "      <td>-0.077672</td>\n",
       "      <td>0.075277</td>\n",
       "      <td>0.001717</td>\n",
       "      <td>0.025778</td>\n",
       "      <td>0.126738</td>\n",
       "      <td>0.017642</td>\n",
       "      <td>0.015007</td>\n",
       "      <td>0.025394</td>\n",
       "      <td>0.005494</td>\n",
       "      <td>0.010039</td>\n",
       "      <td>0.035367</td>\n",
       "      <td>-0.020768</td>\n",
       "      <td>0.005187</td>\n",
       "      <td>0.022993</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>is_repeated_guest</th>\n",
       "      <td>-0.085179</td>\n",
       "      <td>-0.030411</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.031624</td>\n",
       "      <td>-0.249554</td>\n",
       "      <td>-0.135388</td>\n",
       "      <td>0.077776</td>\n",
       "      <td>0.013151</td>\n",
       "      <td>-0.125091</td>\n",
       "      <td>-0.087836</td>\n",
       "      <td>-0.097994</td>\n",
       "      <td>-0.147494</td>\n",
       "      <td>-0.032990</td>\n",
       "      <td>-0.008954</td>\n",
       "      <td>0.082376</td>\n",
       "      <td>0.423259</td>\n",
       "      <td>0.012164</td>\n",
       "      <td>-0.022322</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>agent</th>\n",
       "      <td>-0.081939</td>\n",
       "      <td>-0.030993</td>\n",
       "      <td>0.031624</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.350746</td>\n",
       "      <td>-0.023770</td>\n",
       "      <td>0.176875</td>\n",
       "      <td>0.033876</td>\n",
       "      <td>-0.068753</td>\n",
       "      <td>0.141387</td>\n",
       "      <td>0.183281</td>\n",
       "      <td>-0.034489</td>\n",
       "      <td>0.041242</td>\n",
       "      <td>0.036338</td>\n",
       "      <td>-0.012382</td>\n",
       "      <td>0.021780</td>\n",
       "      <td>0.067084</td>\n",
       "      <td>-0.055037</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>company</th>\n",
       "      <td>-0.024385</td>\n",
       "      <td>-0.077672</td>\n",
       "      <td>-0.249554</td>\n",
       "      <td>0.350746</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.089242</td>\n",
       "      <td>-0.008989</td>\n",
       "      <td>-0.102358</td>\n",
       "      <td>0.152098</td>\n",
       "      <td>0.066253</td>\n",
       "      <td>0.186160</td>\n",
       "      <td>0.213347</td>\n",
       "      <td>0.030958</td>\n",
       "      <td>0.019247</td>\n",
       "      <td>-0.185622</td>\n",
       "      <td>-0.212223</td>\n",
       "      <td>0.121866</td>\n",
       "      <td>0.000255</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>adr</th>\n",
       "      <td>0.046199</td>\n",
       "      <td>0.075277</td>\n",
       "      <td>-0.135388</td>\n",
       "      <td>-0.023770</td>\n",
       "      <td>0.089242</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.058053</td>\n",
       "      <td>0.171458</td>\n",
       "      <td>-0.066381</td>\n",
       "      <td>0.047300</td>\n",
       "      <td>0.063628</td>\n",
       "      <td>0.227480</td>\n",
       "      <td>0.325034</td>\n",
       "      <td>0.028591</td>\n",
       "      <td>-0.065930</td>\n",
       "      <td>-0.069638</td>\n",
       "      <td>0.019201</td>\n",
       "      <td>-0.041333</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>required_car_parking_spaces</th>\n",
       "      <td>-0.194796</td>\n",
       "      <td>0.001717</td>\n",
       "      <td>0.077776</td>\n",
       "      <td>0.176875</td>\n",
       "      <td>-0.008989</td>\n",
       "      <td>0.058053</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.082675</td>\n",
       "      <td>-0.115561</td>\n",
       "      <td>-0.018147</td>\n",
       "      <td>-0.024378</td>\n",
       "      <td>0.016370</td>\n",
       "      <td>0.057060</td>\n",
       "      <td>0.036971</td>\n",
       "      <td>-0.018455</td>\n",
       "      <td>0.046945</td>\n",
       "      <td>0.065724</td>\n",
       "      <td>-0.030462</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>total_of_special_requests</th>\n",
       "      <td>-0.235643</td>\n",
       "      <td>0.025778</td>\n",
       "      <td>0.013151</td>\n",
       "      <td>0.033876</td>\n",
       "      <td>-0.102358</td>\n",
       "      <td>0.171458</td>\n",
       "      <td>0.082675</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>-0.096536</td>\n",
       "      <td>0.071669</td>\n",
       "      <td>0.066785</td>\n",
       "      <td>0.121815</td>\n",
       "      <td>0.081786</td>\n",
       "      <td>0.097601</td>\n",
       "      <td>-0.048585</td>\n",
       "      <td>0.037595</td>\n",
       "      <td>0.052434</td>\n",
       "      <td>-0.082970</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>lead time</th>\n",
       "      <td>0.291994</td>\n",
       "      <td>0.126738</td>\n",
       "      <td>-0.125091</td>\n",
       "      <td>-0.068753</td>\n",
       "      <td>0.152098</td>\n",
       "      <td>-0.066381</td>\n",
       "      <td>-0.115561</td>\n",
       "      <td>-0.096536</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.083984</td>\n",
       "      <td>0.164783</td>\n",
       "      <td>0.116799</td>\n",
       "      <td>-0.038335</td>\n",
       "      <td>-0.021149</td>\n",
       "      <td>0.085961</td>\n",
       "      <td>-0.071128</td>\n",
       "      <td>0.000004</td>\n",
       "      <td>0.170007</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>stays in weekend nights</th>\n",
       "      <td>-0.002631</td>\n",
       "      <td>0.017642</td>\n",
       "      <td>-0.087836</td>\n",
       "      <td>0.141387</td>\n",
       "      <td>0.066253</td>\n",
       "      <td>0.047300</td>\n",
       "      <td>-0.018147</td>\n",
       "      <td>0.071669</td>\n",
       "      <td>0.083984</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.494888</td>\n",
       "      <td>0.090410</td>\n",
       "      <td>0.045430</td>\n",
       "      <td>0.018396</td>\n",
       "      <td>-0.013008</td>\n",
       "      <td>-0.040597</td>\n",
       "      <td>0.062401</td>\n",
       "      <td>-0.054568</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>stays in week nights</th>\n",
       "      <td>0.024110</td>\n",
       "      <td>0.015007</td>\n",
       "      <td>-0.097994</td>\n",
       "      <td>0.183281</td>\n",
       "      <td>0.186160</td>\n",
       "      <td>0.063628</td>\n",
       "      <td>-0.024378</td>\n",
       "      <td>0.066785</td>\n",
       "      <td>0.164783</td>\n",
       "      <td>0.494888</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.091999</td>\n",
       "      <td>0.044259</td>\n",
       "      <td>0.020157</td>\n",
       "      <td>-0.014274</td>\n",
       "      <td>-0.047367</td>\n",
       "      <td>0.095665</td>\n",
       "      <td>-0.002161</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>adults</th>\n",
       "      <td>0.058381</td>\n",
       "      <td>0.025394</td>\n",
       "      <td>-0.147494</td>\n",
       "      <td>-0.034489</td>\n",
       "      <td>0.213347</td>\n",
       "      <td>0.227480</td>\n",
       "      <td>0.016370</td>\n",
       "      <td>0.121815</td>\n",
       "      <td>0.116799</td>\n",
       "      <td>0.090410</td>\n",
       "      <td>0.091999</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.029590</td>\n",
       "      <td>0.017887</td>\n",
       "      <td>-0.006974</td>\n",
       "      <td>-0.105028</td>\n",
       "      <td>-0.052420</td>\n",
       "      <td>-0.008765</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>children</th>\n",
       "      <td>0.004751</td>\n",
       "      <td>0.005494</td>\n",
       "      <td>-0.032990</td>\n",
       "      <td>0.041242</td>\n",
       "      <td>0.030958</td>\n",
       "      <td>0.325034</td>\n",
       "      <td>0.057060</td>\n",
       "      <td>0.081786</td>\n",
       "      <td>-0.038335</td>\n",
       "      <td>0.045430</td>\n",
       "      <td>0.044259</td>\n",
       "      <td>0.029590</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.024131</td>\n",
       "      <td>-0.024752</td>\n",
       "      <td>-0.020364</td>\n",
       "      <td>0.048660</td>\n",
       "      <td>-0.033396</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>babies</th>\n",
       "      <td>-0.032521</td>\n",
       "      <td>0.010039</td>\n",
       "      <td>-0.008954</td>\n",
       "      <td>0.036338</td>\n",
       "      <td>0.019247</td>\n",
       "      <td>0.028591</td>\n",
       "      <td>0.036971</td>\n",
       "      <td>0.097601</td>\n",
       "      <td>-0.021149</td>\n",
       "      <td>0.018396</td>\n",
       "      <td>0.020157</td>\n",
       "      <td>0.017887</td>\n",
       "      <td>0.024131</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>-0.007489</td>\n",
       "      <td>-0.006306</td>\n",
       "      <td>0.083220</td>\n",
       "      <td>-0.010648</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>previous cancellations</th>\n",
       "      <td>0.109922</td>\n",
       "      <td>0.035367</td>\n",
       "      <td>0.082376</td>\n",
       "      <td>-0.012382</td>\n",
       "      <td>-0.185622</td>\n",
       "      <td>-0.065930</td>\n",
       "      <td>-0.018455</td>\n",
       "      <td>-0.048585</td>\n",
       "      <td>0.085961</td>\n",
       "      <td>-0.013008</td>\n",
       "      <td>-0.014274</td>\n",
       "      <td>-0.006974</td>\n",
       "      <td>-0.024752</td>\n",
       "      <td>-0.007489</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.154285</td>\n",
       "      <td>-0.027092</td>\n",
       "      <td>0.005927</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>previous bookings not canceled</th>\n",
       "      <td>-0.055493</td>\n",
       "      <td>-0.020768</td>\n",
       "      <td>0.423259</td>\n",
       "      <td>0.021780</td>\n",
       "      <td>-0.212223</td>\n",
       "      <td>-0.069638</td>\n",
       "      <td>0.046945</td>\n",
       "      <td>0.037595</td>\n",
       "      <td>-0.071128</td>\n",
       "      <td>-0.040597</td>\n",
       "      <td>-0.047367</td>\n",
       "      <td>-0.105028</td>\n",
       "      <td>-0.020364</td>\n",
       "      <td>-0.006306</td>\n",
       "      <td>0.154285</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.011970</td>\n",
       "      <td>-0.009011</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>booking changes</th>\n",
       "      <td>-0.144659</td>\n",
       "      <td>0.005187</td>\n",
       "      <td>0.012164</td>\n",
       "      <td>0.067084</td>\n",
       "      <td>0.121866</td>\n",
       "      <td>0.019201</td>\n",
       "      <td>0.065724</td>\n",
       "      <td>0.052434</td>\n",
       "      <td>0.000004</td>\n",
       "      <td>0.062401</td>\n",
       "      <td>0.095665</td>\n",
       "      <td>-0.052420</td>\n",
       "      <td>0.048660</td>\n",
       "      <td>0.083220</td>\n",
       "      <td>-0.027092</td>\n",
       "      <td>0.011970</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>-0.011661</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>days in waiting list</th>\n",
       "      <td>0.054016</td>\n",
       "      <td>0.022993</td>\n",
       "      <td>-0.022322</td>\n",
       "      <td>-0.055037</td>\n",
       "      <td>0.000255</td>\n",
       "      <td>-0.041333</td>\n",
       "      <td>-0.030462</td>\n",
       "      <td>-0.082970</td>\n",
       "      <td>0.170007</td>\n",
       "      <td>-0.054568</td>\n",
       "      <td>-0.002161</td>\n",
       "      <td>-0.008765</td>\n",
       "      <td>-0.033396</td>\n",
       "      <td>-0.010648</td>\n",
       "      <td>0.005927</td>\n",
       "      <td>-0.009011</td>\n",
       "      <td>-0.011661</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                is_canceled  arrival_date_week_number  \\\n",
       "is_canceled                        1.000000                  0.007465   \n",
       "arrival_date_week_number           0.007465                  1.000000   \n",
       "is_repeated_guest                 -0.085179                 -0.030411   \n",
       "agent                             -0.081939                 -0.030993   \n",
       "company                           -0.024385                 -0.077672   \n",
       "adr                                0.046199                  0.075277   \n",
       "required_car_parking_spaces       -0.194796                  0.001717   \n",
       "total_of_special_requests         -0.235643                  0.025778   \n",
       "lead time                          0.291994                  0.126738   \n",
       "stays in weekend nights           -0.002631                  0.017642   \n",
       "stays in week nights               0.024110                  0.015007   \n",
       "adults                             0.058381                  0.025394   \n",
       "children                           0.004751                  0.005494   \n",
       "babies                            -0.032521                  0.010039   \n",
       "previous cancellations             0.109922                  0.035367   \n",
       "previous bookings not canceled    -0.055493                 -0.020768   \n",
       "booking changes                   -0.144659                  0.005187   \n",
       "days in waiting list               0.054016                  0.022993   \n",
       "\n",
       "                                is_repeated_guest     agent   company  \\\n",
       "is_canceled                             -0.085179 -0.081939 -0.024385   \n",
       "arrival_date_week_number                -0.030411 -0.030993 -0.077672   \n",
       "is_repeated_guest                        1.000000  0.031624 -0.249554   \n",
       "agent                                    0.031624  1.000000  0.350746   \n",
       "company                                 -0.249554  0.350746  1.000000   \n",
       "adr                                     -0.135388 -0.023770  0.089242   \n",
       "required_car_parking_spaces              0.077776  0.176875 -0.008989   \n",
       "total_of_special_requests                0.013151  0.033876 -0.102358   \n",
       "lead time                               -0.125091 -0.068753  0.152098   \n",
       "stays in weekend nights                 -0.087836  0.141387  0.066253   \n",
       "stays in week nights                    -0.097994  0.183281  0.186160   \n",
       "adults                                  -0.147494 -0.034489  0.213347   \n",
       "children                                -0.032990  0.041242  0.030958   \n",
       "babies                                  -0.008954  0.036338  0.019247   \n",
       "previous cancellations                   0.082376 -0.012382 -0.185622   \n",
       "previous bookings not canceled           0.423259  0.021780 -0.212223   \n",
       "booking changes                          0.012164  0.067084  0.121866   \n",
       "days in waiting list                    -0.022322 -0.055037  0.000255   \n",
       "\n",
       "                                     adr  required_car_parking_spaces  \\\n",
       "is_canceled                     0.046199                    -0.194796   \n",
       "arrival_date_week_number        0.075277                     0.001717   \n",
       "is_repeated_guest              -0.135388                     0.077776   \n",
       "agent                          -0.023770                     0.176875   \n",
       "company                         0.089242                    -0.008989   \n",
       "adr                             1.000000                     0.058053   \n",
       "required_car_parking_spaces     0.058053                     1.000000   \n",
       "total_of_special_requests       0.171458                     0.082675   \n",
       "lead time                      -0.066381                    -0.115561   \n",
       "stays in weekend nights         0.047300                    -0.018147   \n",
       "stays in week nights            0.063628                    -0.024378   \n",
       "adults                          0.227480                     0.016370   \n",
       "children                        0.325034                     0.057060   \n",
       "babies                          0.028591                     0.036971   \n",
       "previous cancellations         -0.065930                    -0.018455   \n",
       "previous bookings not canceled -0.069638                     0.046945   \n",
       "booking changes                 0.019201                     0.065724   \n",
       "days in waiting list           -0.041333                    -0.030462   \n",
       "\n",
       "                                total_of_special_requests  lead time  \\\n",
       "is_canceled                                     -0.235643   0.291994   \n",
       "arrival_date_week_number                         0.025778   0.126738   \n",
       "is_repeated_guest                                0.013151  -0.125091   \n",
       "agent                                            0.033876  -0.068753   \n",
       "company                                         -0.102358   0.152098   \n",
       "adr                                              0.171458  -0.066381   \n",
       "required_car_parking_spaces                      0.082675  -0.115561   \n",
       "total_of_special_requests                        1.000000  -0.096536   \n",
       "lead time                                       -0.096536   1.000000   \n",
       "stays in weekend nights                          0.071669   0.083984   \n",
       "stays in week nights                             0.066785   0.164783   \n",
       "adults                                           0.121815   0.116799   \n",
       "children                                         0.081786  -0.038335   \n",
       "babies                                           0.097601  -0.021149   \n",
       "previous cancellations                          -0.048585   0.085961   \n",
       "previous bookings not canceled                   0.037595  -0.071128   \n",
       "booking changes                                  0.052434   0.000004   \n",
       "days in waiting list                            -0.082970   0.170007   \n",
       "\n",
       "                                stays in weekend nights  stays in week nights  \\\n",
       "is_canceled                                   -0.002631              0.024110   \n",
       "arrival_date_week_number                       0.017642              0.015007   \n",
       "is_repeated_guest                             -0.087836             -0.097994   \n",
       "agent                                          0.141387              0.183281   \n",
       "company                                        0.066253              0.186160   \n",
       "adr                                            0.047300              0.063628   \n",
       "required_car_parking_spaces                   -0.018147             -0.024378   \n",
       "total_of_special_requests                      0.071669              0.066785   \n",
       "lead time                                      0.083984              0.164783   \n",
       "stays in weekend nights                        1.000000              0.494888   \n",
       "stays in week nights                           0.494888              1.000000   \n",
       "adults                                         0.090410              0.091999   \n",
       "children                                       0.045430              0.044259   \n",
       "babies                                         0.018396              0.020157   \n",
       "previous cancellations                        -0.013008             -0.014274   \n",
       "previous bookings not canceled                -0.040597             -0.047367   \n",
       "booking changes                                0.062401              0.095665   \n",
       "days in waiting list                          -0.054568             -0.002161   \n",
       "\n",
       "                                 adults   children    babies   \\\n",
       "is_canceled                     0.058381   0.004751 -0.032521   \n",
       "arrival_date_week_number        0.025394   0.005494  0.010039   \n",
       "is_repeated_guest              -0.147494  -0.032990 -0.008954   \n",
       "agent                          -0.034489   0.041242  0.036338   \n",
       "company                         0.213347   0.030958  0.019247   \n",
       "adr                             0.227480   0.325034  0.028591   \n",
       "required_car_parking_spaces     0.016370   0.057060  0.036971   \n",
       "total_of_special_requests       0.121815   0.081786  0.097601   \n",
       "lead time                       0.116799  -0.038335 -0.021149   \n",
       "stays in weekend nights         0.090410   0.045430  0.018396   \n",
       "stays in week nights            0.091999   0.044259  0.020157   \n",
       "adults                          1.000000   0.029590  0.017887   \n",
       "children                        0.029590   1.000000  0.024131   \n",
       "babies                          0.017887   0.024131  1.000000   \n",
       "previous cancellations         -0.006974  -0.024752 -0.007489   \n",
       "previous bookings not canceled -0.105028  -0.020364 -0.006306   \n",
       "booking changes                -0.052420   0.048660  0.083220   \n",
       "days in waiting list           -0.008765  -0.033396 -0.010648   \n",
       "\n",
       "                                previous cancellations  \\\n",
       "is_canceled                                   0.109922   \n",
       "arrival_date_week_number                      0.035367   \n",
       "is_repeated_guest                             0.082376   \n",
       "agent                                        -0.012382   \n",
       "company                                      -0.185622   \n",
       "adr                                          -0.065930   \n",
       "required_car_parking_spaces                  -0.018455   \n",
       "total_of_special_requests                    -0.048585   \n",
       "lead time                                     0.085961   \n",
       "stays in weekend nights                      -0.013008   \n",
       "stays in week nights                         -0.014274   \n",
       "adults                                       -0.006974   \n",
       "children                                     -0.024752   \n",
       "babies                                       -0.007489   \n",
       "previous cancellations                        1.000000   \n",
       "previous bookings not canceled                0.154285   \n",
       "booking changes                              -0.027092   \n",
       "days in waiting list                          0.005927   \n",
       "\n",
       "                                previous bookings not canceled  \\\n",
       "is_canceled                                          -0.055493   \n",
       "arrival_date_week_number                             -0.020768   \n",
       "is_repeated_guest                                     0.423259   \n",
       "agent                                                 0.021780   \n",
       "company                                              -0.212223   \n",
       "adr                                                  -0.069638   \n",
       "required_car_parking_spaces                           0.046945   \n",
       "total_of_special_requests                             0.037595   \n",
       "lead time                                            -0.071128   \n",
       "stays in weekend nights                              -0.040597   \n",
       "stays in week nights                                 -0.047367   \n",
       "adults                                               -0.105028   \n",
       "children                                             -0.020364   \n",
       "babies                                               -0.006306   \n",
       "previous cancellations                                0.154285   \n",
       "previous bookings not canceled                        1.000000   \n",
       "booking changes                                       0.011970   \n",
       "days in waiting list                                 -0.009011   \n",
       "\n",
       "                                booking changes  days in waiting list  \n",
       "is_canceled                           -0.144659              0.054016  \n",
       "arrival_date_week_number               0.005187              0.022993  \n",
       "is_repeated_guest                      0.012164             -0.022322  \n",
       "agent                                  0.067084             -0.055037  \n",
       "company                                0.121866              0.000255  \n",
       "adr                                    0.019201             -0.041333  \n",
       "required_car_parking_spaces            0.065724             -0.030462  \n",
       "total_of_special_requests              0.052434             -0.082970  \n",
       "lead time                              0.000004              0.170007  \n",
       "stays in weekend nights                0.062401             -0.054568  \n",
       "stays in week nights                   0.095665             -0.002161  \n",
       "adults                                -0.052420             -0.008765  \n",
       "children                               0.048660             -0.033396  \n",
       "babies                                 0.083220             -0.010648  \n",
       "previous cancellations                -0.027092              0.005927  \n",
       "previous bookings not canceled         0.011970             -0.009011  \n",
       "booking changes                        1.000000             -0.011661  \n",
       "days in waiting list                  -0.011661              1.000000  "
      ]
     },
     "execution_count": 139,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "numdf.corr()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 140,
   "metadata": {
    "id": "Zo8JkNG0EGB3",
    "outputId": "25aeb162-cbca-40ac-8e24-f788aac9ff42"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Correlation</th>\n",
       "      <th>P-Value</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>is_canceled</th>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.000000e+00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>arrival_date_week_number</th>\n",
       "      <td>0.007465</td>\n",
       "      <td>1.004947e-02</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>is_repeated_guest</th>\n",
       "      <td>-0.085179</td>\n",
       "      <td>2.682118e-190</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>adr</th>\n",
       "      <td>0.046199</td>\n",
       "      <td>3.425649e-57</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>required_car_parking_spaces</th>\n",
       "      <td>-0.194796</td>\n",
       "      <td>0.000000e+00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>total_of_special_requests</th>\n",
       "      <td>-0.235643</td>\n",
       "      <td>0.000000e+00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>lead time</th>\n",
       "      <td>0.291994</td>\n",
       "      <td>0.000000e+00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>stays in weekend nights</th>\n",
       "      <td>-0.002631</td>\n",
       "      <td>3.642389e-01</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>stays in week nights</th>\n",
       "      <td>0.024110</td>\n",
       "      <td>9.210784e-17</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>adults</th>\n",
       "      <td>0.058381</td>\n",
       "      <td>2.815612e-90</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>children</th>\n",
       "      <td>0.004751</td>\n",
       "      <td>1.013684e-01</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>babies</th>\n",
       "      <td>-0.032521</td>\n",
       "      <td>3.385355e-29</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>previous cancellations</th>\n",
       "      <td>0.109922</td>\n",
       "      <td>2.944270e-316</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>previous bookings not canceled</th>\n",
       "      <td>-0.055493</td>\n",
       "      <td>9.777438e-82</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>booking changes</th>\n",
       "      <td>-0.144659</td>\n",
       "      <td>0.000000e+00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>days in waiting list</th>\n",
       "      <td>0.054016</td>\n",
       "      <td>1.554865e-77</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                Correlation         P-Value\n",
       "is_canceled                         1.000000   0.000000e+00\n",
       "arrival_date_week_number            0.007465   1.004947e-02\n",
       "is_repeated_guest                  -0.085179  2.682118e-190\n",
       "adr                                 0.046199   3.425649e-57\n",
       "required_car_parking_spaces        -0.194796   0.000000e+00\n",
       "total_of_special_requests          -0.235643   0.000000e+00\n",
       "lead time                           0.291994   0.000000e+00\n",
       "stays in weekend nights            -0.002631   3.642389e-01\n",
       "stays in week nights                0.024110   9.210784e-17\n",
       "adults                              0.058381   2.815612e-90\n",
       "children                            0.004751   1.013684e-01\n",
       "babies                             -0.032521   3.385355e-29\n",
       "previous cancellations              0.109922  2.944270e-316\n",
       "previous bookings not canceled     -0.055493   9.777438e-82\n",
       "booking changes                    -0.144659   0.000000e+00\n",
       "days in waiting list                0.054016   1.554865e-77"
      ]
     },
     "execution_count": 140,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "numdff = numdf.copy()\n",
    "numdff.drop(['company', 'agent'], axis =1, inplace= True)\n",
    "from scipy import stats\n",
    "corrlist = []\n",
    "plist= []\n",
    "for columns in numdff.columns:\n",
    "    corr , p = stats.pointbiserialr(numdff['is_canceled'], numdff[columns])\n",
    "    corrlist.append(corr)\n",
    "    plist.append(p)\n",
    "dict = {'Correlation ' : corrlist, 'P-Value' : plist} \n",
    "Summary = pd.DataFrame(data = dict , index = numdff.columns)\n",
    "Summary"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "nDiuJRUpEGB4"
   },
   "source": [
    "Dans ce tableau nous avons la correlation des variables numerique avec la variable dependante ainsi que la P-Value\n",
    "- Note que nous ne pouvons pas faire point biserialr correlation sur des variable contenant des valeurs Nan, pour les variables 'company' et 'agent' nous allons prendre en consideration pearson correlation, puisque dans notre cas, nous avons pas une difference significatif entre les deux types de correlation\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "1BNgFGrTEGB4"
   },
   "source": [
    "## Conclusion \n",
    "apres cette analyse des donnee numerique, et se basant sur P-value et la correlation: nous pouvons deduire que: \n",
    "- nous avons une faible correlation entre tout les variables independante et la variable dependante, cela montre que nous avons une relations de non-linearite \n",
    "- Nous avons des relations qui ont  une signification statistique tres forte(P-value <0.05)\n",
    "On peut conclure que les variables suivant n'aurons pas d'impact sur la variable dependante (P-value >0.01): \n",
    "- stays in weekend nights\n",
    "- children "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "UwJFblJvEGB4"
   },
   "source": [
    "## Top 5 most important features that has the strongest relationship with the target variable \n",
    " - Feature selection is performed using ANOVA F measure via the f_classif() function."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 141,
   "metadata": {
    "id": "8m2WImYXEGB4",
    "outputId": "c278a566-72f4-463b-f7e7-52f9d38cc98d",
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>arrival_date_week_number</th>\n",
       "      <th>adr</th>\n",
       "      <th>required_car_parking_spaces</th>\n",
       "      <th>total_of_special_requests</th>\n",
       "      <th>stays in week nights</th>\n",
       "      <th>babies</th>\n",
       "      <th>previous bookings not canceled</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>27</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>-1.316808</td>\n",
       "      <td>-0.081618</td>\n",
       "      <td>-0.088662</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>27</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>-1.316808</td>\n",
       "      <td>-0.081618</td>\n",
       "      <td>-0.088662</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>27</td>\n",
       "      <td>75.00</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>-0.790536</td>\n",
       "      <td>-0.081618</td>\n",
       "      <td>-0.088662</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>27</td>\n",
       "      <td>75.00</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>-0.790536</td>\n",
       "      <td>-0.081618</td>\n",
       "      <td>-0.088662</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>27</td>\n",
       "      <td>98.00</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>-0.264264</td>\n",
       "      <td>-0.081618</td>\n",
       "      <td>-0.088662</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>118893</th>\n",
       "      <td>35</td>\n",
       "      <td>96.14</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1.314550</td>\n",
       "      <td>-0.081618</td>\n",
       "      <td>-0.088662</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>118894</th>\n",
       "      <td>35</td>\n",
       "      <td>225.43</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>1.314550</td>\n",
       "      <td>-0.081618</td>\n",
       "      <td>-0.088662</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>118895</th>\n",
       "      <td>35</td>\n",
       "      <td>157.71</td>\n",
       "      <td>0</td>\n",
       "      <td>4</td>\n",
       "      <td>1.314550</td>\n",
       "      <td>-0.081618</td>\n",
       "      <td>-0.088662</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>118896</th>\n",
       "      <td>35</td>\n",
       "      <td>104.40</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1.314550</td>\n",
       "      <td>-0.081618</td>\n",
       "      <td>-0.088662</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>118897</th>\n",
       "      <td>35</td>\n",
       "      <td>151.20</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>2.367093</td>\n",
       "      <td>-0.081618</td>\n",
       "      <td>-0.088662</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>118898 rows × 7 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "        arrival_date_week_number     adr  required_car_parking_spaces  \\\n",
       "0                             27    0.00                            0   \n",
       "1                             27    0.00                            0   \n",
       "2                             27   75.00                            0   \n",
       "3                             27   75.00                            0   \n",
       "4                             27   98.00                            0   \n",
       "...                          ...     ...                          ...   \n",
       "118893                        35   96.14                            0   \n",
       "118894                        35  225.43                            0   \n",
       "118895                        35  157.71                            0   \n",
       "118896                        35  104.40                            0   \n",
       "118897                        35  151.20                            0   \n",
       "\n",
       "        total_of_special_requests  stays in week nights   babies   \\\n",
       "0                               0             -1.316808 -0.081618   \n",
       "1                               0             -1.316808 -0.081618   \n",
       "2                               0             -0.790536 -0.081618   \n",
       "3                               0             -0.790536 -0.081618   \n",
       "4                               1             -0.264264 -0.081618   \n",
       "...                           ...                   ...       ...   \n",
       "118893                          0              1.314550 -0.081618   \n",
       "118894                          2              1.314550 -0.081618   \n",
       "118895                          4              1.314550 -0.081618   \n",
       "118896                          0              1.314550 -0.081618   \n",
       "118897                          2              2.367093 -0.081618   \n",
       "\n",
       "        previous bookings not canceled  \n",
       "0                            -0.088662  \n",
       "1                            -0.088662  \n",
       "2                            -0.088662  \n",
       "3                            -0.088662  \n",
       "4                            -0.088662  \n",
       "...                                ...  \n",
       "118893                       -0.088662  \n",
       "118894                       -0.088662  \n",
       "118895                       -0.088662  \n",
       "118896                       -0.088662  \n",
       "118897                       -0.088662  \n",
       "\n",
       "[118898 rows x 7 columns]"
      ]
     },
     "execution_count": 141,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "\n",
    "from sklearn.feature_selection import SelectKBest\n",
    "from sklearn.feature_selection import f_classif\n",
    "fs = SelectKBest(score_func=f_classif, k=7)\n",
    "colnum = numdff.columns.tolist()[1:]\n",
    "y = numdff['is_canceled']\n",
    "X= numdff[colnum]\n",
    "X_selected = fs.fit_transform(X, y)\n",
    "cols = fs.get_support(indices=True)\n",
    "features_df_num= numdff.iloc[:,cols]\n",
    "features_df_num"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 142,
   "metadata": {
    "id": "ypDb-RgfEGB5",
    "outputId": "3241c86d-e34b-4693-a46e-003e7070762a"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<BarContainer object of 2 artists>"
      ]
     },
     "execution_count": 142,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 720x720 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "cancel('hotel')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 143,
   "metadata": {
    "id": "24UqooU_EGB5",
    "outputId": "c376f011-d0b3-49ff-d053-6741f0c455f7"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>hotel</th>\n",
       "      <th>is_canceled</th>\n",
       "      <th>lead_time</th>\n",
       "      <th>arrival_date_week_number</th>\n",
       "      <th>stays_in_weekend_nights</th>\n",
       "      <th>stays_in_week_nights</th>\n",
       "      <th>adults</th>\n",
       "      <th>children</th>\n",
       "      <th>babies</th>\n",
       "      <th>meal</th>\n",
       "      <th>...</th>\n",
       "      <th>agent</th>\n",
       "      <th>company</th>\n",
       "      <th>days_in_waiting_list</th>\n",
       "      <th>customer_type</th>\n",
       "      <th>adr</th>\n",
       "      <th>required_car_parking_spaces</th>\n",
       "      <th>total_of_special_requests</th>\n",
       "      <th>reservation_status</th>\n",
       "      <th>reservation_status_date</th>\n",
       "      <th>arrival_date</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>Resort Hotel</td>\n",
       "      <td>1</td>\n",
       "      <td>85</td>\n",
       "      <td>27</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>BB</td>\n",
       "      <td>...</td>\n",
       "      <td>240.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>Transient</td>\n",
       "      <td>82.0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>Canceled</td>\n",
       "      <td>2015-05-06</td>\n",
       "      <td>2015-07-01</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>Resort Hotel</td>\n",
       "      <td>1</td>\n",
       "      <td>75</td>\n",
       "      <td>27</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>HB</td>\n",
       "      <td>...</td>\n",
       "      <td>15.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>Transient</td>\n",
       "      <td>105.5</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>Canceled</td>\n",
       "      <td>2015-04-22</td>\n",
       "      <td>2015-07-01</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>Resort Hotel</td>\n",
       "      <td>1</td>\n",
       "      <td>23</td>\n",
       "      <td>27</td>\n",
       "      <td>0</td>\n",
       "      <td>4</td>\n",
       "      <td>2</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>BB</td>\n",
       "      <td>...</td>\n",
       "      <td>240.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>Transient</td>\n",
       "      <td>123.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>Canceled</td>\n",
       "      <td>2015-06-23</td>\n",
       "      <td>2015-07-01</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>27</th>\n",
       "      <td>Resort Hotel</td>\n",
       "      <td>1</td>\n",
       "      <td>60</td>\n",
       "      <td>27</td>\n",
       "      <td>2</td>\n",
       "      <td>5</td>\n",
       "      <td>2</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>BB</td>\n",
       "      <td>...</td>\n",
       "      <td>240.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>Transient</td>\n",
       "      <td>107.0</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>Canceled</td>\n",
       "      <td>2015-05-11</td>\n",
       "      <td>2015-07-01</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>31</th>\n",
       "      <td>Resort Hotel</td>\n",
       "      <td>1</td>\n",
       "      <td>96</td>\n",
       "      <td>27</td>\n",
       "      <td>2</td>\n",
       "      <td>8</td>\n",
       "      <td>2</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>BB</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>Transient</td>\n",
       "      <td>108.3</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>Canceled</td>\n",
       "      <td>2015-05-29</td>\n",
       "      <td>2015-07-01</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 30 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "           hotel  is_canceled  lead_time  arrival_date_week_number  \\\n",
       "8   Resort Hotel            1         85                        27   \n",
       "9   Resort Hotel            1         75                        27   \n",
       "10  Resort Hotel            1         23                        27   \n",
       "27  Resort Hotel            1         60                        27   \n",
       "31  Resort Hotel            1         96                        27   \n",
       "\n",
       "    stays_in_weekend_nights  stays_in_week_nights  adults  children  babies  \\\n",
       "8                         0                     3       2       0.0       0   \n",
       "9                         0                     3       2       0.0       0   \n",
       "10                        0                     4       2       0.0       0   \n",
       "27                        2                     5       2       0.0       0   \n",
       "31                        2                     8       2       0.0       0   \n",
       "\n",
       "   meal  ...  agent company days_in_waiting_list  customer_type    adr  \\\n",
       "8    BB  ...  240.0     NaN                    0      Transient   82.0   \n",
       "9    HB  ...   15.0     NaN                    0      Transient  105.5   \n",
       "10   BB  ...  240.0     NaN                    0      Transient  123.0   \n",
       "27   BB  ...  240.0     NaN                    0      Transient  107.0   \n",
       "31   BB  ...    NaN     NaN                    0      Transient  108.3   \n",
       "\n",
       "    required_car_parking_spaces total_of_special_requests reservation_status  \\\n",
       "8                             0                         1           Canceled   \n",
       "9                             0                         0           Canceled   \n",
       "10                            0                         0           Canceled   \n",
       "27                            0                         2           Canceled   \n",
       "31                            0                         2           Canceled   \n",
       "\n",
       "    reservation_status_date arrival_date  \n",
       "8                2015-05-06   2015-07-01  \n",
       "9                2015-04-22   2015-07-01  \n",
       "10               2015-06-23   2015-07-01  \n",
       "27               2015-05-11   2015-07-01  \n",
       "31               2015-05-29   2015-07-01  \n",
       "\n",
       "[5 rows x 30 columns]"
      ]
     },
     "execution_count": 143,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "\n",
    "gp = data[data['is_canceled'] == 1]\n",
    "gp.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 144,
   "metadata": {
    "id": "xtPtuIA-EGB5"
   },
   "outputs": [],
   "source": [
    "ypoints = gp['adults'].unique()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 145,
   "metadata": {
    "id": "Yw3seSVQEGB5",
    "outputId": "3c08fd20-08d5-404d-f3b6-bf7a14b72c39",
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:xlabel='adults', ylabel='count'>"
      ]
     },
     "execution_count": 145,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x720 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.countplot(data=data, x='adults', hue='is_canceled')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "3tQWgMfDEGB6"
   },
   "source": [
    "### Spliting data to Train/test data \n",
    " - at first we only gonna train&test the model with the best 14 features ( numerical & categorical) and then compare the performance with all features being used\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 146,
   "metadata": {
    "id": "hrMyRytVEGB6"
   },
   "outputs": [],
   "source": [
    "from sklearn.model_selection import train_test_split, cross_val_score"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 147,
   "metadata": {
    "id": "04FeRHeHEGB6"
   },
   "outputs": [],
   "source": [
    "best_features = pd.concat ([features_df_cat, features_df_num], axis = 1)\n",
    "best_features['churn'] = dataset['is_canceled']\n",
    "X = np.asarray(best_features.values[:,:14]) \n",
    "y = np.asarray(best_features[['churn']])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 148,
   "metadata": {
    "id": "GGVpHVY-EGB6",
    "outputId": "f462e690-060b-4ec9-f16c-92ff2a4cd88b"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Train set: (71338, 14) (71338, 1)\n",
      "Test set: (47560, 14) (47560, 1)\n"
     ]
    }
   ],
   "source": [
    "X_train, X_test, y_train, y_test = train_test_split( X, y, test_size=0.4, random_state=4)\n",
    "print ('Train set:', X_train.shape,  y_train.shape)\n",
    "print ('Test set:', X_test.shape,  y_test.shape)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 149,
   "metadata": {
    "id": "w0_MyHTkEGB6",
    "outputId": "68e95fec-d275-477e-ba7b-708da367129a"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'\"\\nLR = LogisticRegression(n_jobs=-1, random_state=34)\\nclf = GridSearchCV(LR, params, cv=5)\\nclf.fit(X_train, y_train)\\nscores_lr = cross_val_score(clf, X_train, y_train, cv=5)\\nscores = clf.cv_results_[\\'mean_test_score\\']\\nclf.best_estimator_\\n'"
      ]
     },
     "execution_count": 149,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from sklearn.model_selection import GridSearchCV\n",
    "from sklearn.linear_model import LogisticRegression\n",
    "from sklearn.metrics import confusion_matrix\n",
    "\n",
    "params = {'solver' :('liblinear', 'newton-cg', 'lbfgs', 'sag', 'saga') , 'C':[0.1 , 10]}"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 150,
   "metadata": {},
   "outputs": [],
   "source": [
    "LR = LogisticRegression(n_jobs=-1, random_state=34)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 151,
   "metadata": {},
   "outputs": [],
   "source": [
    "clf = GridSearchCV(LR, params, cv=5)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 152,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "GridSearchCV(cv=5, estimator=LogisticRegression(n_jobs=-1, random_state=34),\n",
       "             param_grid={'C': [0.1, 10],\n",
       "                         'solver': ('liblinear', 'newton-cg', 'lbfgs', 'sag',\n",
       "                                    'saga')})"
      ]
     },
     "execution_count": 152,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "clf.fit(X_train, y_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 153,
   "metadata": {},
   "outputs": [],
   "source": [
    "scores_lr = cross_val_score(clf, X_train, y_train, cv=5)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 154,
   "metadata": {},
   "outputs": [],
   "source": [
    "scores = clf.cv_results_['mean_test_score']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 155,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "LogisticRegression(C=0.1, n_jobs=-1, random_state=34, solver='liblinear')"
      ]
     },
     "execution_count": 155,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "clf.best_estimator_"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 156,
   "metadata": {
    "id": "izZRlYkHEGB7"
   },
   "outputs": [],
   "source": [
    "yhat = clf.predict(X_test)\n",
    "yhat\n",
    "yhat_train = clf.predict(X_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 157,
   "metadata": {
    "id": "mfH2968TEGB7",
    "outputId": "e2aae333-724e-4aa1-9bae-ee1325c908e6"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[0.02158443, 0.97841557],\n",
       "       [0.99581738, 0.00418262],\n",
       "       [0.96135992, 0.03864008],\n",
       "       ...,\n",
       "       [0.94602469, 0.05397531],\n",
       "       [0.00552645, 0.99447355],\n",
       "       [0.97908207, 0.02091793]])"
      ]
     },
     "execution_count": 157,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "yhat_prob = clf.predict_proba(X_test)\n",
    "yhat_prob\n",
    "yhat_prob_train = clf.predict_proba(X_train)\n",
    "yhat_prob_train\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "vZ2WTYxVEGB7"
   },
   "source": [
    "## Evaluation"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 158,
   "metadata": {
    "id": "vMKD5ynYEGB7",
    "outputId": "d895c97f-3b57-4d51-f23d-c702aa1837de"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0.9836742787269903\n",
      "0.984088073715774\n"
     ]
    }
   ],
   "source": [
    "from sklearn.metrics import jaccard_score\n",
    "print(jaccard_score(y_test, yhat,pos_label=0))\n",
    "print(jaccard_score(y_train, yhat_train, pos_label = 0))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 159,
   "metadata": {
    "id": "BsCKaq3hEGB7",
    "outputId": "30b98c98-9552-4184-cf97-7a8a4a916f51"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0.12768572552689703\n",
      "0.1265106537817569\n"
     ]
    }
   ],
   "source": [
    "from sklearn.metrics import log_loss\n",
    "print(log_loss(y_test, yhat_prob))\n",
    "print(log_loss(y_train, yhat_prob_train))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 162,
   "metadata": {
    "id": "SxPQu_bnEGB8",
    "outputId": "21d86448-8ca2-4115-dcfe-047eddd09545"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[[17301   485]\n",
      " [    9 29765]]\n",
      "Confusion matrix, without normalization\n",
      "[[17301   485]\n",
      " [    9 29765]]\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x720 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "from sklearn.metrics import classification_report, confusion_matrix\n",
    "import itertools\n",
    "def plot_confusion_matrix(cm, classes,\n",
    "                          normalize=False,\n",
    "                          title='Confusion matrix',\n",
    "                          cmap=plt.cm.Blues):\n",
    "    \"\"\"\n",
    "    This function prints and plots the confusion matrix.\n",
    "    Normalization can be applied by setting `normalize=True`.\n",
    "    \"\"\"\n",
    "    if normalize:\n",
    "        cm = cm.astype('float') / cm.sum(axis=1)[:, np.newaxis]\n",
    "        print(\"Normalized confusion matrix\")\n",
    "    else:\n",
    "        print('Confusion matrix, without normalization')\n",
    "\n",
    "    print(cm)\n",
    "\n",
    "    plt.imshow(cm, interpolation='nearest', cmap=cmap)\n",
    "    plt.title(title)\n",
    "    plt.colorbar()\n",
    "    tick_marks = np.arange(len(classes))\n",
    "    plt.xticks(tick_marks, classes, rotation=45)\n",
    "    plt.yticks(tick_marks, classes)\n",
    "\n",
    "    fmt = '.2f' if normalize else 'd'\n",
    "    thresh = cm.max() / 2.\n",
    "    for i, j in itertools.product(range(cm.shape[0]), range(cm.shape[1])):\n",
    "        plt.text(j, i, format(cm[i, j], fmt),\n",
    "                 horizontalalignment=\"center\",\n",
    "                 color=\"white\" if cm[i, j] > thresh else \"black\")\n",
    "\n",
    "    plt.tight_layout()\n",
    "    plt.ylabel('True label')\n",
    "    plt.xlabel('Predicted label')\n",
    "cnf_matrix=confusion_matrix(y_test, yhat, labels=[1,0])\n",
    "print(cnf_matrix)\n",
    "# Plot non-normalized confusion matrix\n",
    "plt.figure()\n",
    "plot_confusion_matrix(cnf_matrix, classes=['churn=1','churn=0'],normalize= False,  title='Confusion matrix')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 163,
   "metadata": {
    "id": "WidV3jEyEGB8",
    "outputId": "d2d51c76-abc2-497c-c3dc-7cbcd67867dd"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[17301,   485],\n",
       "       [    9, 29765]], dtype=int64)"
      ]
     },
     "execution_count": 163,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Compute confusion matrix\n",
    "cnf_matrix = confusion_matrix(y_test, yhat, labels=[1,0])\n",
    "np.set_printoptions(precision=2)\n",
    "cnf_matrix"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 164,
   "metadata": {
    "id": "4x2A-eUyEGB9",
    "outputId": "242550dc-8633-4d78-a847-ece90813a85e"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.98      1.00      0.99     29774\n",
      "           1       1.00      0.97      0.99     17786\n",
      "\n",
      "    accuracy                           0.99     47560\n",
      "   macro avg       0.99      0.99      0.99     47560\n",
      "weighted avg       0.99      0.99      0.99     47560\n",
      "\n"
     ]
    }
   ],
   "source": [
    "print (classification_report(y_test, yhat))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 165,
   "metadata": {
    "id": "4pwHnBcPEGB9",
    "outputId": "473379f1-4524-4db2-b01f-c2ab423e029c"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Average cross validation score: 0.989\n",
      "Test accuracy: 0.984\n",
      "F1 score: 0.979\n",
      "[[29774     0]\n",
      " [  739 17047]]\n"
     ]
    }
   ],
   "source": [
    "from sklearn.svm import LinearSVC\n",
    "from sklearn.metrics import f1_score\n",
    "\n",
    "svc = LinearSVC().fit(X_train, y_train)\n",
    "scores_svc = cross_val_score(svc, X_train, y_train, cv=5)\n",
    "svc_pred = svc.predict(X_test)\n",
    "\n",
    "print(\"Average cross validation score: {:.3f}\".format(scores.mean()))\n",
    "print(\"Test accuracy: {:.3f}\".format(svc.score(X_test, y_test)))\n",
    "print(\"F1 score: {:.3f}\".format(f1_score(y_test, svc_pred)))\n",
    "print(confusion_matrix(y_test, svc_pred))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 166,
   "metadata": {
    "id": "meUvFzBKEGB9",
    "outputId": "b7a77318-c00e-4645-ab98-8a13f3ba152f"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.9847626790770697"
      ]
     },
     "execution_count": 166,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "svc.score(X_train, y_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 167,
   "metadata": {
    "id": "4veKAc4oEGB9",
    "outputId": "d1321b76-d8e6-4d8e-a70f-4d2697d84183"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.98      1.00      0.99     29774\n",
      "           1       1.00      0.96      0.98     17786\n",
      "\n",
      "    accuracy                           0.98     47560\n",
      "   macro avg       0.99      0.98      0.98     47560\n",
      "weighted avg       0.98      0.98      0.98     47560\n",
      "\n"
     ]
    }
   ],
   "source": [
    "print (classification_report(y_test, svc_pred))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 168,
   "metadata": {
    "id": "_cufRqM3EGB-",
    "outputId": "1e1c3884-e8dd-4b18-a87e-504719e57bfb"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.9789532789900671"
      ]
     },
     "execution_count": 168,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "svc_pred_train = svc.predict(X_train)\n",
    "f1_score(y_train, svc_pred_train)"
   ]
  }
 ],
 "metadata": {
  "colab": {
   "name": "Projet_data_mining.ipynb",
   "provenance": []
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 1
}
